@model TheBookingPlatform.ViewModels.ShiftListingViewModel
@using TheBookingPlatform.ViewModels; 

@{   
    var listofData = new List<ShiftDetail>();

}
<style>
    .table > .table > tbody > tr > th, .table > tfoot > tr > th, .table > thead > tr > td, .table > tbody > tr > td, .table > tfoot > tr > td {
        padding: 5px 5px;
        vertical-align: middle;
    }

    .table > tbody > tr > td, .table > tbody > tr > th, .table > tfoot > tr > td, .table > tfoot > tr > th, .table > thead > tr > td, .table > thead > tr > th {
        padding: 5px !important;
        line-height: 1.42857143;
        vertical-align: top;
        border-top: none;
    }
    .fa-add:before, .fa-plus:before {
        content: "\2b";
        color: #a8a7a7 !important;
    }
    .bg-success {
        background-color: lightgreen;
        height: 25px;
        display: flex !important;
        justify-content: center;
        align-items: center;
    }

    .bg-primary {
        background-color: #337ab7 !important;
        color:white;
    }


    .bg-info {
        background-color: deepskyblue;
        color: white;
        height: 25px;
        display: flex !important;
        justify-content: center;
        align-items: center;
    }

    .data-btn {
        cursor: pointer;
    }

    .addShift {
        cursor: pointer;
        height: 25px;
        display: flex !important;
        justify-content: center;
        align-items: center;
        border-radius: 5px;
        font-size: small;
        background: white !important;
        color: black !important;
        border: solid 1px #d0d0d0;
    }

    .btn-light:hover {
        color: #3498DB;
        background: #F0F0F0;
    }

    .bg-primary_shift {
        height: 25px;
        background: #FBE489 !important;
        color: black !important;
        display: flex !important;
        justify-content: center;
        align-items: center;
        border-radius: 5px;
        font-size: small;
    }


    .bg-danger {
        background-color: purple;
        color: white;
        height: 25px;
        display: flex !important;
        justify-content: center;
        align-items: center;
        border-radius: 5px;
        font-size: small;
        background: #F26E6E !important;
        color: black !important;
    }

    .bg-light {
        border-radius: 5px;
    }
</style>

<div id="MainTimeTableView" class="row">
    <div class="card">
        <div class="card-body">
            <h2 class="card-title" style="display:flex;justify-content:center;gap:10px; font-weight:500 !important;">
                TimeTable <a href="https://yourbookingplatform.com/how-to-manage-shifts-in-the-timetable/" target="_blank"><i class="fa fa-info-circle" style="font-size: 25px;"></i></a>
            </h2>
            <div class="row">
                <div class="col-md-12" style="display:flex;justify-content:center;align-items:center;">
                    <button id="PrevBtn" type="button" style=" margin-bottom: 0px !important; padding: 0 4px; height: 30px; background: none; font-size: 25px;" class="btn btn-light btn-sm">
                        ←
                    </button>
                    @if (Model.weekDates.FirstOrDefault().ToString("MMMM") == Model.weekDates.LastOrDefault().ToString("MMMM"))
                    {
<h4 style="font-weight: 500 !important; margin: 10px; color: #7f8c8d !important; ">
    @Model.weekDates.FirstOrDefault().ToString("MMMM") @(Model.weekDates.FirstOrDefault().Day.ToString("d")) - @(Model.weekDates.LastOrDefault().Day.ToString("d")) @Model.weekDates.FirstOrDefault().ToString("MMMM")
    <input type="hidden" value="@Model.weekDates.FirstOrDefault().ToString("yyyy-MM-dd")" id="StartDate" />
    <input type="hidden" value="@Model.weekDates.LastOrDefault().ToString("yyyy-MM-dd")" id="EndDate" />
</h4>

                    }
                    else
                    {
                <h4 style="font-weight: 500 !important; margin: 10px; color: #7f8c8d !important; ">
                    @Model.weekDates.FirstOrDefault().ToString("MMMM") @(Model.weekDates.FirstOrDefault().Day.ToString("d")) - @(Model.weekDates.LastOrDefault().Day.ToString("d")) @Model.weekDates.FirstOrDefault().ToString("MMMM")
                    <input type="hidden" value="@Model.weekDates.FirstOrDefault().ToString("yyyy-MM-dd")" id="StartDate" />
                    <input type="hidden" value="@Model.weekDates.LastOrDefault().ToString("yyyy-MM-dd")" id="EndDate" />
                </h4>

                    }


                <button id="nextBtn" type="button" style=" margin-bottom: 0px !important; padding: 0 4px; height: 30px; background: none; font-size: 25px;" class="btn btn-light btn-sm">
                    →
                </button>
                </div>

                <div style="display:flex;justify-content:center;">
                    <button onclick="window.location.href='@Url.Action("Index","Shift")'" class="btn btn-light btn-info btn-sm btn-round">Today</button>
                </div>

            </div>


            <br />
            <div class="table-responsive">
                <table class="table table-borderless">
                    <tr class="" style="background: #F3F4F6 !important;font-size:smaller; color: black !important; ">
                        <th>Employees</th>
                        @foreach (var date in Model.weekDates)
                        {
                            if (date.ToString("yyyy-MM-dd") == DateTime.Now.ToString("yyyy-MM-dd"))
                            {
                                <th class="text-center text-success">
                                    (@date.ToString("dd")) @date.ToString("ddd")

                                </th>
                            }
                            else
                            {
                                <th class="text-center">
                                    (@date.ToString("dd")) @date.ToString("ddd")

                                </th>
                            }
                        }

                        
                    </tr>
                    @foreach (var empSchedule in Model.Shifts)
                    {
                        <tr data-employee-id="@empSchedule.Employee.ID">
                            <td style="display:flex;justify-content:space-between;">
                                @empSchedule.Employee.Name
                                <span class="badge bg-light text-dark total-hours_@empSchedule.Employee.ID"></span>
                            </td>

                            @foreach (var date in Model.weekDates)
                            {
                                bool AddedShift = false;

                                if (listofData.Where(x => x.Date.ToString("yyyy-MM-dd") == date.ToString("yyyy-MM-dd") && x.EmployeeID == empSchedule.Employee.ID).Count() == 0)
                                {
                                    var shiftsWithinRange = empSchedule.Shifts.Where(s => s.Shift.Date.DayOfWeek.ToString() == date.DayOfWeek.ToString()).ToList();
                                    if (shiftsWithinRange.Count() > 0)
                                    {

                                        foreach (var shift in shiftsWithinRange)
                                        {
                                            if (shift != null)
                                            {
                                                if (shift.RecurShift != null)
                                                {
                                                    if (shift != null)
                                                    {
                                                        if (shift.ExceptionShift.Count() != 0)
                                                        {
                                                            bool exceptionFound = false;
                                                            foreach (var shiftExceptionShift in shift.ExceptionShift.Where(x => x.ShiftID == shift.Shift.ID && x.ExceptionDate.ToString("yyyy-MM-dd") == date.ToString("yyyy-MM-dd")))
                                                            {
                                                                if (shiftExceptionShift.ShiftID == shift.Shift.ID && shiftExceptionShift.ExceptionDate.ToString("yyyy-MM-dd") == date.ToString("yyyy-MM-dd") && shiftExceptionShift.IsNotWorking == true)
                                                                {
                                                                    <td class="text-center ">
                                                                        <span data-href="@Url.Action("Action", "Shift")" data-id="@shiftExceptionShift.ID" data-isexception="true" style="display:block;" class="bg-light    data-btn" data-employee="@empSchedule.Employee.ID" data-date="@date.ToString("yyyy-MM-dd")" data-bs-toggle="modal" data-bs-target="#actionModal"><s>Closed<i class="fa fa-close"></i> </s></span>
                                                                    </td>
                                                                    exceptionFound = true;
                                                                    AddedShift = true;
                                                                    listofData.Add(new TheBookingPlatform.ViewModels.ShiftDetail { Date = date, EmployeeID = empSchedule.Employee.ID });

                                                                    break; // Break if an exception is found
                                                                }
                                                                else if ((shiftExceptionShift.ShiftID == shift.Shift.ID && shiftExceptionShift.ExceptionDate.ToString("yyyy-MM-dd") == date.ToString("yyyy-MM-dd") && shiftExceptionShift.IsNotWorking == false))
                                                                {
                                                                    <td class="text-center shift-cell" data-start-time="@shiftExceptionShift.StartTime" data-end-time="@shiftExceptionShift.EndTime">
                                                                        <span data-href="@Url.Action("Action", "Shift")" data-id="@shiftExceptionShift.ID" data-isexception="true" style="display:block;" class="bg-danger data-btn" data-employee="@empSchedule.Employee.ID" data-date="@date.ToString("yyyy-MM-dd")" data-bs-toggle="modal" data-bs-target="#actionModal">@shiftExceptionShift.StartTime - @shiftExceptionShift.EndTime</span>
                                                                    </td>
                                                                    exceptionFound = true;
                                                                    AddedShift = true;
                                                                    listofData.Add(new TheBookingPlatform.ViewModels.ShiftDetail { Date = date, EmployeeID = empSchedule.Employee.ID });

                                                                    break; // Break if an exception is found
                                                                }
                                                            }

                                                            if (!exceptionFound)
                                                            {
                                                                // Display the default span if no exception is found
                                                                <td class="text-center shift-cell" data-start-time="@shift.Shift.StartTime" data-end-time="@shift.Shift.EndTime">
                                                                    <span data-href="@Url.Action("Action", "Shift")" data-id="@shift.Shift.ID" style="" class="bg-primary data-btn bg-primary_shift" data-employee="@empSchedule.Employee.ID" data-date="@date.ToString("yyyy-MM-dd")" data-bs-toggle="modal" data-bs-target="#actionModal">@shift.Shift.StartTime - @shift.Shift.EndTime</span>
                                                                </td>
                                                                AddedShift = true;
                                                                listofData.Add(new TheBookingPlatform.ViewModels.ShiftDetail { Date = date, EmployeeID = empSchedule.Employee.ID });

                                                                break;
                                                            }



                                                        }

                                                        else
                                                        {
                                                            if (shift.Shift.Day == date.DayOfWeek.ToString() && shift.Shift.Date <= date)
                                                            {
                                                                <td class="text-center shift-cell" data-start-time="@shift.Shift.StartTime" data-end-time="@shift.Shift.EndTime">
                                                                    <span data-href="@Url.Action("Action", "Shift")" data-id="@shift.Shift.ID" class="bg-primary bg-primary_shift data-btn" data-employee="@empSchedule.Employee.ID" data-date="@date.ToString("yyyy-MM-dd")" data-bs-toggle="modal" data-bs-target="#actionModal">@shift.Shift.StartTime - @shift.Shift.EndTime</span>
                                                                </td>
                                                                AddedShift = true;
                                                                listofData.Add(new TheBookingPlatform.ViewModels.ShiftDetail { Date = date, EmployeeID = empSchedule.Employee.ID });
                                                                break;

                                                            }

                                                        }
                                                    }
                                                    else
                                                    {

                                                        <td class="text-center ">
                                                            <span data-href="@Url.Action("Action", "Shift")" style="display:block;" data-employee="@empSchedule.Employee.ID" data-date="@date.ToString("yyyy-MM-dd")" class="bg-info addShift data-btn" data-bs-toggle="modal" data-bs-target="#actionModal"><i class="fa fa-plus"></i></span>
                                                        </td>
                                                        AddedShift = true;
                                                        listofData.Add(new TheBookingPlatform.ViewModels.ShiftDetail { Date = date, EmployeeID = empSchedule.Employee.ID });

                                                        break;

                                                    }



                                                }
                                                else
                                                {
                                                    if (shift.Shift.IsRecurring && shift.RecurShift != null && DateTime.Parse(shift.RecurShift.RecurEndDate) >= date)
                                                    {
                                                        <td class="text-center shift-cell" data-start-time="@shift.Shift.StartTime" data-end-time="@shift.Shift.EndTime">
                                                            @* Access and display details from ShiftModel (e.g., StartTime, EndTime) *@
                                                            <span data-href="@Url.Action("Action", "Shift")" data-id="@shift.Shift.ID" class="bg-primary data-btn bg-primary_shift" data-employee="@empSchedule.Employee.ID" data-date="@date.ToString("yyyy-MM-dd")" data-bs-toggle="modal" data-bs-target="#actionModal">@shift.Shift.StartTime - @shift.Shift.EndTime</span>

                                                        </td>
                                                        AddedShift = true;
                                                        listofData.Add(new TheBookingPlatform.ViewModels.ShiftDetail { Date = date, EmployeeID = empSchedule.Employee.ID });

                                                        break;

                                                    }
                                                    else
                                                    {

                                                        if (shift.ExceptionShift != null)
                                                        {
                                                            if (shift.ExceptionShift.Where(x => x.ExceptionDate.ToString("yyyy-MM-dd") == date.ToString("yyyy-MM-dd")).Any())
                                                            {

                                                                bool exceptionFound = false;
                                                                foreach (var shiftExceptionShift in shift.ExceptionShift)
                                                                {
                                                                    if (shiftExceptionShift.ShiftID == shift.Shift.ID && shiftExceptionShift.ExceptionDate.ToString("yyyy-MM-dd") == date.ToString("yyyy-MM-dd"))
                                                                    {
                                                                        if (shiftExceptionShift.IsNotWorking)
                                                                        {
                                                                            <td class="text-center">
                                                                                <span data-href="@Url.Action("Action", "Shift")" data-id="@shiftExceptionShift.ID" data-isexception="true" style="display:block;" class="bg-light data-btn" data-employee="@empSchedule.Employee.ID" data-date="@date.ToString("yyyy-MM-dd")" data-bs-toggle="modal" data-bs-target="#actionModal"><s>Closed <i class="fa fa-close"></i></s></span>
                                                                            </td>
                                                                        }
                                                                        else
                                                                        {
                                                                            <td class="text-center shift-cell" data-start-time="@shiftExceptionShift.StartTime" data-end-time="@shiftExceptionShift.EndTime">
                                                                                <span data-href="@Url.Action("Action", "Shift")" data-id="@shiftExceptionShift.ID" data-isexception="true" style="display:block;" class="bg-danger data-btn" data-employee="@empSchedule.Employee.ID" data-date="@date.ToString("yyyy-MM-dd")" data-bs-toggle="modal" data-bs-target="#actionModal">@shiftExceptionShift.StartTime - @shiftExceptionShift.EndTime</span>
                                                                            </td>
                                                                            AddedShift = true;

                                                                        }
                                                                        exceptionFound = true;
                                                                        listofData.Add(new TheBookingPlatform.ViewModels.ShiftDetail { Date = date, EmployeeID = empSchedule.Employee.ID });

                                                                        break; // Break if an exception is found
                                                                    }
                                                                    else
                                                                    {
                                                                        <td class="text-center">
                                                                            <span data-href="@Url.Action("Action", "Shift")" style="display:block;" data-employee="@empSchedule.Employee.ID" data-date="@date.ToString("yyyy-MM-dd")" class="bg-info addShift data-btn" data-bs-toggle="modal" data-bs-target="#actionModal"><i class="fa fa-plus"></i></span>
                                                                        </td>
                                                                        AddedShift = true;
                                                                        listofData.Add(new TheBookingPlatform.ViewModels.ShiftDetail { Date = date, EmployeeID = empSchedule.Employee.ID });

                                                                    }

                                                                }
                                                                if (!exceptionFound)
                                                                {
                                                                    <td class="text-center">

                                                                        <span data-href="@Url.Action("Action", "Shift")" style="display:block;" data-employee="@empSchedule.Employee.ID" data-date="@date.ToString("yyyy-MM-dd")" class="bg-info addShift data-btn" data-bs-toggle="modal" data-bs-target="#actionModal"><i class="fa fa-plus"></i></span>
                                                                    </td>
                                                                    AddedShift = true;
                                                                    listofData.Add(new TheBookingPlatform.ViewModels.ShiftDetail { Date = date, EmployeeID = empSchedule.Employee.ID });

                                                                    break;


                                                                }
                                                                else
                                                                {
                                                                    break;
                                                                }

                                                            }


                                                        }
                                                        else
                                                        {
                                                            if (shift.Shift.Date.ToString("yyyy-MM-dd") == date.ToString("yyyy-MM-dd"))
                                                            {
                                                                <td class="text-center shift-cell" data-start-time="@shift.Shift.StartTime" data-end-time="@shift.Shift.EndTime">
                                                                    <span data-href="@Url.Action("Action", "Shift")" data-id="@shift.Shift.ID" class="bg-primary bg-primary_shift data-btn" data-employee="@empSchedule.Employee.ID" data-date="@date.ToString("yyyy-MM-dd")" data-bs-toggle="modal" data-bs-target="#actionModal">@shift.Shift.StartTime - @shift.Shift.EndTime</span>
                                                                </td>
                                                                AddedShift = true;
                                                                listofData.Add(new TheBookingPlatform.ViewModels.ShiftDetail { Date = date, EmployeeID = empSchedule.Employee.ID });

                                                                break;

                                                            }
                                                            else
                                                            {
                                                                <td class="text-center">
                                                                    <span data-href="@Url.Action("Action", "Shift")" style="display:block;" data-employee="@empSchedule.Employee.ID" data-date="@date.ToString("yyyy-MM-dd")" class="bg-info addShift data-btn" data-bs-toggle="modal" data-bs-target="#actionModal"><i class="fa fa-plus"></i></span>
                                                                </td>
                                                                AddedShift = true;
                                                                listofData.Add(new TheBookingPlatform.ViewModels.ShiftDetail { Date = date, EmployeeID = empSchedule.Employee.ID });
                                                                break;

                                                            }
                                                        }


                                                    }
                                                }
                                            }
                                            else
                                            {

                                            }
                                        }

                                    }
                                    else
                                    {
                                        <td class="text-center ">
                                            <span data-href="@Url.Action("Action", "Shift")" style="display:block;" data-employee="@empSchedule.Employee.ID" data-date="@date.ToString("yyyy-MM-dd")" class="bg-info addShift data-btn" data-bs-toggle="modal" data-bs-target="#actionModal"><i class="fa fa-plus"></i></span>
                                        </td>
                                        AddedShift = true;
                                        listofData.Add(new TheBookingPlatform.ViewModels.ShiftDetail { Date = date, EmployeeID = empSchedule.Employee.ID });



                                    }

                                    if (AddedShift == false)
                                    {
                                        <td class="text-center ">
                                            <span data-href="@Url.Action("Action", "Shift")" style="display:block;" data-employee="@empSchedule.Employee.ID" data-date="@date.ToString("yyyy-MM-dd")" class="bg-info addShift data-btn" data-bs-toggle="modal" data-bs-target="#actionModal"><i class="fa fa-plus"></i></span>
                                        </td>
                                    }
                                }
                            }



                        </tr>
                    }
                </table>
            </div>
        </div>
    </div>
</div>
<div class="modal  fade center" id="actionModal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
    </div>
</div>
<script>

    $("#nextBtn").click(function () {
        showLoadingSpinner();
        var StartDate = $("#StartDate").val();
        var EndDate = $("#EndDate").val();

        $.ajax({
            url: '@Url.Action("GetNextWeek","Shift")',
            data: { StartDate: StartDate, EndDate: EndDate },
            type: 'GET',
        })
            .done(function (response) {
                $("#MainTimeTableView").html(response);
                hideLoadingSpinner();
            })
            .fail(function () {
                hideLoadingSpinner();

            });
        });



    $("#PrevBtn").click(function () {
        showLoadingSpinner();
        var StartDate = $("#StartDate").val();
        var EndDate = $("#EndDate").val();
        $.ajax({
            url: '@Url.Action("GetPreviousWeek","Shift")',
            data: { StartDate: StartDate, EndDate: EndDate },
            type: 'GET',
        })
            .done(function (response) {
                hideLoadingSpinner();
                $("#MainTimeTableView").html(response);
            })
            .fail(function () {
                hideLoadingSpinner();

            });
    });



    $(document).ready(function () {

        $(".data-btn").click(function () {
            showLoadingSpinner();
            var Date = $(this).data("date");
            var EmployeeID = $(this).data("employee");
            var ID = $(this).data("id");
            var IsException = $(this).data("isexception");
            $.ajax({
                url: $(this).attr("data-href"),
                data: { Date: Date, EmployeeID: EmployeeID, ID: ID, IsException: IsException }
            })
                .done(function (response) {
                    $("#actionModal .modal-dialog").html("");

                    hideLoadingSpinner();
                    $("#actionModal .modal-dialog").html(response);
                })
                .fail(function () {
                    hideLoadingSpinner();

                });
        });


        $('tr[data-employee-id]').each(function () {
            var totalHours = 0;
            var employeeID = $(this).data('employee-id');

            $(this).find('.shift-cell').each(function () {
                var startTime = $(this).data('start-time');
                var endTime = $(this).data('end-time');

                if (startTime && endTime) {
                    // Parse times (assuming they are in HH:mm format)
                    var start = new Date('1970-01-01T' + startTime + 'Z');
                    var end = new Date('1970-01-01T' + endTime + 'Z');

                    // Calculate the duration in hours
                    var hours = (end - start) / 36e5; // 36e5 is the scientific notation for 3600000 which is the number of milliseconds in an hour
                    totalHours += hours;
                }
            });

            // Display the total hours
            let hours = totalHours.toFixed(2);
            let [whole, decimal] = hours.split('.');
            whole = whole.padStart(2, '0');
            let hoursFormatted = `${whole}.${decimal}`;
            $(this).find('.total-hours_' + employeeID).text(hoursFormatted + ' hrs');
        });
    });
</script>
