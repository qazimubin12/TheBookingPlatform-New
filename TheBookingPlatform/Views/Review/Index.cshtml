@model TheBookingPlatform.ViewModels.SettingsViewModel
@{
    ViewBag.Title = "Index";
    string StartDate = new DateTime(DateTime.Now.Year, DateTime.Now.Month, 1).ToString("yyyy-MM-dd");
    string EndDate = new DateTime(DateTime.Now.Year, DateTime.Now.Month, DateTime.DaysInMonth(DateTime.Now.Year, DateTime.Now.Month)).ToString("yyyy-MM-dd"); ;
}

<style>
    .review-container {
        display: flex;
        flex-direction: column;
        gap: 1rem;
    }
    .btn-primary {
        background: #24244B !important;
        border-color: #24244B !important;
        cursor:pointer;
    }
    .review-card {
        border: 1px solid #ccc;
        padding: 1rem;
        border-radius: 10px;
        background-color: #fff;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    }

    .review-header {
        display: flex;
        justify-content: space-between;
        align-items: center;
    }

    .review-date {
        font-size: 0.9em;
        color: #888;
    }

    .filterStar{
        font-size:xx-small;
    }
</style>
<div class="card">
    <div class="card-body">
        <h4 class="card-title">Reviews </h4>

        <div class="row justify-content-center align-items-center">
            <div class="form-group col-md-6">
                <label>Filter</label>
                <select class="form-control choices__input" id="SelectedOption">
                    <option value="All">All</option>
                    <option selected value="Reviewed">Reviewed</option>
                    <option value="NotReviewed">Not Reviewed</option>
                </select>
            </div>

            <div class="col-md-6">
                <div class="d-flex" style="align-items:center;gap:20px;">
                    <label for="startDate" class="w-auto">Start Date:</label>
                    <input value="@StartDate" class="form-control w-auto" type="date" id="startDate">
                </div>
                <div class="d-flex" style="align-items:center;gap:20px;">
                    <label class="w-auto" for="endDate">End Date:</label>
                    <input value="@EndDate" class="form-control w-auto" type="date" id="endDate">
                </div>
                <button style="font-size:xx-small;" class="btn btn-primary btn-sm" type="button" id="filterDate">Filter Date</button>
            </div>

            <div class="d-flex justify-content-center gap-3">
                <button class="filterStar btn btn-sm btn-primary" type="button" data-rating="5">5 Star</button>
                <button class="filterStar btn btn-sm btn-primary" type="button" data-rating="4">4 Star</button>
                <button class="filterStar btn btn-sm btn-primary" type="button" data-rating="3">3 Star</button>
                <button class="filterStar btn btn-sm btn-primary" type="button" data-rating="0">Below 3 Star</button>

            </div>
        </div>


        <div class="row">
            <div class="col col-lg-12">
                <div class="col-lg-12 grid-margin stretch-card">
                    
                        <div id="reviewContainer" class="review-container">
                            @*@foreach (var item in Model.Reviews.Take(50))
                            {
                                <div class="review-card" data-reviewedornot="@item.Type"
                                     data-ratingdate="@item.Review.Date.ToString("yyyy-MM-dd")"
    
                                data-rating-row="@item.Review.Rating"
                                     style="display:@(item.Type == "Reviewed" ? "block" : "none")">
                                    <div class="review-header">
                                        <strong>@item.CustomerName</strong>
                                        <span class="review-date">@item.Review.Date.ToString("dd/MM/yyyy")</span>
                                    </div>
                                    <div class="review-stars">
                                        @for (int i = 0; i < item.Review.Rating; i++)
                                        {
                                            <i class="fa fa-star" style="color: gold;"></i>
                                        }
                                    </div>
                                    <p class="review-text">@item.Review.Feedback</p>
                                    <p><strong>Employee:</strong> @item.EmployeeName</p>
                                    <button class="respond-btn">Respond</button>
                                </div>
                            }*@
                        </div>

                        <button type="button" class="btn btn-secondary" id="loadMoreBtn">Load More Reviews</button>

                   
                </div>
            </div>
        </div>

    </div>
</div>

<script>
    let skip = 0;
    const take = 50;

    function loadMoreReviews() {
        
        var selectedoption = $("#SelectedOption").val();
        $.ajax({
            url: '@Url.Action("GetMoreReviews","Review")',
            data: { skip: skip, take: take, Selectedoption: selectedoption },
            method: 'GET',
            success: function (data) {
                if (data.length === 0) {
                    $('#loadMoreBtn').hide();
                    return;
                }

                data.forEach(item => {
                    const card = createReviewCard(item);
                    $('#reviewContainer').append(card);
                });

                skip += take;
            },
            error: function (xhr, status, error) {
                console.error('Error fetching reviews:', error);
            }
        });

    }

    loadMoreReviews();

    $("#loadMoreBtn").click(function () {
        loadMoreReviews();
    });

    function createReviewCard(item) {
        const div = document.createElement('div');
        div.className = 'review-card';
        div.setAttribute('data-reviewedornot', item.Type);
        div.setAttribute('data-ratingdate', item.Review.Date);
        div.setAttribute('data-rating-row', item.Review.Rating);
        div.style.display = item.Type === "Reviewed" ? "block" : "none";

        div.innerHTML = `
        <div class="review-header">
            <strong>${item.CustomerName}</strong>
            <span class="review-date">${item.Date}</span>
        </div>
        <div class="review-stars">
            ${'<i class="fa fa-star" style="color: gold;"></i>'.repeat(item.Review.Rating)}
        </div>
        <p class="review-text">${item.Review.Feedback}</p>
        <p><strong>Employee:</strong> ${item.EmployeeName}</p>
    `;
        return div;
    }

    $(".data-btn").click(function () {
        $.ajax({
            url: $(this).attr("data-href"),
        })
            .done(function (response) {
                $("#actionModal .modal-dialog").html(response);
            });
    });


    $(document).ready(function () {


        var elements = document.getElementsByClassName('choices__input');

        // Check if there are any elements found
        if (elements.length > 0) {
            // Loop through each element and initialize Choices for it
            for (var i = 0; i < elements.length; i++) {
                const example = new Choices(elements[i], {
                    searchEnabled: false,
                    itemSelectText: ''
                });
            }
        }
        // Add event listener for date range filter
        $('#filterDate').on('click', function () {
            var startDate = $('#startDate').val();
            var endDate = $('#endDate').val();

            filterTableByDate(startDate, endDate);
        });
        var startDate = $('#startDate').val();
        var endDate = $('#endDate').val();

        filterTableByDate(startDate, endDate);
        // Add event listener for star rating filter
        $('.filterStar').on('click', function () {
            var rating = $(this).data('rating');

            filterTableByRating(rating);
        });

        // Add event listener for "no reviews yet" filter
        $('#filterNoReviews').on('click', function () {
            filterTableByNoReviews();
        });

        function filterTableByDate(startDate, endDate) {
            $('.review-card').each(function () {

                var dateText = $(this).data("ratingdate");
                var date = new Date(dateText);
                var startDateObj = new Date(startDate);
                var endDateObj = new Date(endDate);
                var selectedOption = $("#SelectedOption").val();
                var reviewedornot = $(this).data("reviewedornot")
                if (selectedOption == reviewedornot) {
                    if (date >= startDateObj && date <= endDateObj) {
                        $(this).show();
                    } else {
                        $(this).hide();
                    }
                }
                else {
                    if (selectedOption == "All") {
                        if (date >= startDateObj && date <= endDateObj) {
                            $(this).show();
                        } else {
                            $(this).hide();
                        }
                    }
                    else {
                        $(this).hide();
                    }
                }
            });
        }


        function filterTableByRating(rating) {
            $('.review-card').each(function () {
                // Update the index to match the position of the Rating class td in your HTML
                var ratingText = $(this).data('ratingRow');

                var currentRating = ratingText;
                if (rating == "0") {
                    if (currentRating > rating && currentRating < 3) {
                        $(this).show();
                    } else {
                        $(this).hide();
                    }
                } else {
                    if (currentRating == rating) {
                        $(this).show();
                    } else {
                        $(this).hide();
                    }
                }
            });
        }
        //function filterTableByNoReviews() {
        //    $('tbody tr').each(function () {
        //        var feedback = $(this).find('td:nth-child(3)').text().trim();

        //        if (feedback === "") {
        //            $(this).show();
        //        } else {
        //            $(this).hide();
        //        }
        //    });
        //}
    });

</script>




