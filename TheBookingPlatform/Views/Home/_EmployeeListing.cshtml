@model TheBookingPlatform.ViewModels.EmployeeListingViewModel
@{
    ViewBag.Title = "Index";
}
<div style="padding-left:0px;padding-right:0px;" class="col-md-12">
    @if (Model.Employees != null)
    {
        <div class="card table-responsive">

                <table class="table table-striped">
                    <thead>
                        <tr>

                            <th class="text-center">
                                Name
                            </th>

                            
                            <th class="text-center">
                                Calendar History <a href="https://yourbookingplatform.com/how-to-use-employee-calendar-history/" target="_blank"><i class="fa fa-info-circle"></i></a>
                            </th>
                            <th class="text-center">
                                Payroll Type <a href="https://yourbookingplatform.com/how-to-set-up-payroll-types-for-employees-in-ybp/" target="_blank"><i class="fa fa-info-circle"></i></a>
                            </th>
                            <th class="text-center">
                                Price Change
                            </th>

                            <th class="text-center">
                                Amount
                            </th>

                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.Employees)
                        {
                            <tr>
                              
                                <td class="text-center">@item.Employee.Name</td>


                                <td class="text-center"  style="width:200px;">
                                    <select class="form-control limitAccess choices__input" id="Limit_@(item.Employee.ID)" onchange="ChangeLimitoFCalendarAccess('@item.Employee.ID')">
                                        @foreach (var access in Model.CalendarHistoryAccessList)
                                        {
                                            if (access == item.Employee.LimitCalendarHistory)
                                            {
                                                <option selected value="@access">@access</option>
                                            }
                                            else
                                            {
                                                <option value="@access">@access</option>

                                            }
                                        }
                                    </select>
                                </td>

                                <td class="text-center" style="width:200px;">
                                    <select class="form-control changeType choices__input " data-id="@item.Employee.ID" id="Type_@(item.Employee.ID)">
                                        @foreach (var access in Model.Types)
                                        {
                                            if (access == item.Employee.Type)
                                            {
                                                <option selected value="@access">@access</option>
                                            }
                                            else
                                            {
                                                <option value="@access">@access</option>

                                            }
                                        }
                                    </select>

                                </td>
                                <td class="text-center">
                                    <a class="btn btn-primary btn-sm" href="@Url.Action("Index", "EmployeePriceChange", new {EmployeeID = item.Employee.ID})">Price Change</a>
                                </td>
                                <td style="display:flex;">
                                    <div class="input-group input-group-dynamic">

                                        <input type="text" class="form-control numberPercentage" data-id="@item.Employee.ID" value="@item.Employee.Percentage" name="Number" id="Number_@(item.Employee.ID)" />
                                    </div>
                                        <button class="btn btn-primary btn-sm" onclick="ChangeTypeOfEmployee('@item.Employee.ID')" type="button">
                                            <i class="material-icons">payments</i>
                                        </button>
                                </td>


                            </tr>
                        }
                    </tbody>
                </table>
            </div>
    }
    else
    {

        <div class="alert alert-warning col-md-12" role="alert">
            Sorry! No records exist.
        </div>
    }
</div>


<script>
           function ChangeLimitoFCalendarAccess(employeeID) {
            var LimitToBeSet = $("#Limit_" + employeeID).val();
            $.ajax({
                url: '@Url.Action("UpdateLimit", "Employee")', // Update this with your controller and action names
                type: 'POST',
                data: { employeeID: employeeID, LimitToBeSet: LimitToBeSet },
                success: function (result) {
                    //alert("Order Updated");
                    console.log("Updated");
                },
                error: function (error) {
                    // Handle error response if needed
                }
            });
        }

        function ChangeTypeOfEmployee(employeeID) {
            var Type = $("#Type_" + employeeID).val();
            var Number = $("#Number_" + employeeID).val();
            $.ajax({
                url: '@Url.Action("UpdateType", "Employee")', // Update this with your controller and action names
                type: 'POST',
                data: { ID: employeeID, Type: Type,Number:Number },
                success: function (result) {
                    //alert("Order Updated");
                    var employee = result.Employee.ID;
                    var type = result.Employee.Type;
                    if (type != "Do not Display Payroll") {
                        window.location.href = `@Url.Action("Index", "PayRoll")?Employee=${employee}&Type=${type}`;
                    }
                },
                error: function (error) {
                    // Handle error response if needed
                }
            });
        }


    $(document).ready(function () {
        var elements = document.getElementsByClassName('choices__input');

        // Check if there are any elements found
        if (elements.length > 0) {
            // Loop through each element and initialize Choices for it
            for (var i = 0; i < elements.length; i++) {
                const example = new Choices(elements[i], {
                    searchEnabled: false,
                    itemSelectText: ''
                });
            }
        }
            $(document).on("change", ".numberPercentage", function () {
                var employeeID = $(this).data("id");
                var Type = $("#Type_" + employeeID).val();
                var Number = $("#Number_" + employeeID).val();
                $.ajax({
                    url: '@Url.Action("UpdateType", "Employee")', // Ensure this is correct
                    type: 'POST',
                    data: { ID: employeeID, Type: Type, Number: Number },
                    success: function (result) {
                        console.log("Updated");
                    },
                    error: function (error) {
                        // Handle error response if needed
                        console.log("Error:", error);
                    }
                });
            });

            $(document).on("change", ".changeType", function () {
                var employeeID = $(this).data("id");
                var Type = $("#Type_" + employeeID).val();
                var Number = $("#Number_" + employeeID).val();
                $.ajax({
                    url: '@Url.Action("UpdateType", "Employee")', // Ensure this is correct
                    type: 'POST',
                    data: { ID: employeeID, Type: Type, Number: Number },
                    success: function (result) {
                        console.log("Updated");
                    },
                    error: function (error) {
                        // Handle error response if needed
                        console.log("Error:", error);
                    }
                });
            });
        });
</script>




