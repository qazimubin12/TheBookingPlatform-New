@model TheBookingPlatform.ViewModels.SettingsViewModel
@{
    ViewBag.Title = "RegisterCompany";
}
@using System.Security.Claims

@{
    var package = "";
    var inTrial = "";
}
@if (User.Identity.IsAuthenticated)
{
    var claimsPrincipal = User as ClaimsPrincipal;

    // Use traditional null checks
    if (claimsPrincipal != null)
    {
        var claim = claimsPrincipal.FindAll("Package").Where(x => x.Value != "").FirstOrDefault();
        if (claim != null)
        {
            package = claim.Value;
        }
        var InTrial = claimsPrincipal.FindAll("InTrial").Where(x => x.Value != "").FirstOrDefault();
        if (InTrial != null)
        {
            inTrial = InTrial.Value;
        }
    }
}

<style>
    label {
        width: 100%;
        margin-left: 0px;
        margin-bottom: 0px;
        margin-top: 10px;
    }

    textarea {
        border: solid 0.5px black;
        border-radius: 10px;
    }
</style>
<form id="MainCompanyRegisterForm">
    <div class="card" style="margin-bottom:20px;">
        <div class="card-body">
            <h4 class="card-title">
                Company Details <a href="https://yourbookingplatform.com/how-to-set-up-company-details/ " target="_blank"><i class="fa fa-info-circle"></i></a>
            </h4>
            <div class="row">
                <div class="col-md-4 ">
                    <div class="form-group">
                        <div class="input-group input-group-dynamic">
                            <input type="hidden" name="ID" value="@Model.Company.ID" id="ID" />
                            <label class="w-100">
                                Business Name
                            </label>
                            <input value="@Model.Company.Business" class="form-control" placeholder="Enter Business Name..." type="text" name="Business" id="Business" required />
                        </div>
                    </div>
                </div>


                <div class="col-md-8">
                    <div class="form-group">
                        <div class="input-group input-group-dynamic">
                            <label class="w-100">
                                Business Address
                            </label>
                            <input value="@Model.Company.Address" class="form-control" placeholder="Enter Business Address..." type="text" name="Address" />
                        </div>
                    </div>

                </div>
            </div>

            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        <div class="input-group input-group-dynamic">

                            <label class="w-100">
                                Postal Code
                            </label>
                            <input class="form-control" value="@Model.Company.PostalCode" placeholder="Enter Postal Code..." type="text" name="PostalCode" />
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <div class="input-group input-group-dynamic">

                            <label class="w-100">
                                City
                            </label>
                            <input class="form-control" value="@Model.Company.City" placeholder="Enter City..." type="text" name="City" />
                        </div>
                    </div>

                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <div class="input-group input-group-dynamic">

                            <label class="w-100">
                                Phone Number
                            </label>
                            <input class="form-control" value="@Model.Company.PhoneNumber" id="PhoneNumber" placeholder="Enter Phone Number..." type="text" name="PhoneNumber" required />
                        </div>
                    </div>
                </div>
            </div>

            <div class="row">
                <div class="col-md-12">
                    <div class="form-group">
                        <label>Logo</label>
                        <span>Click on the Picture to change</span>
                        @if (Model.Company.Logo == "" || Model.Company.Logo == null)
                        {
                            <img id="MainThumb" style="width:150px;" src="~/Content/TBPContent/placeholder.png" alt="...">
                        }
                        else
                        {
                            <img id="MainThumb" style="width:150px;" src="@Model.Company.Logo" alt="...">

                        }

                        <input value="@Model.Company.Logo" type="hidden" name="Logo" id="Logo" />
                        <input type="file" id="LogoUpload" accept="image/*" />

                    </div>
                </div>
            </div>
            <div class="row">

                <div class="col-md-3">
                    <div class="form-group">
                        <div class="input-group input-group-dynamic">
                            <label>Select Country</label>
                            <select class="form-control" name="CountryName" id="CountryName">
                                @foreach (var item in Model.Countries)
                                {
                                    if (item == Model.Company.CountryName)
                                    {
                                        <option value="@item" selected>@item</option>
                                    }
                                    else
                                    {
                                        <option value="@item">@item</option>

                                    }
                                }
                            </select>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <div class="input-group input-group-dynamic">
                            <label>Select Currency</label>
                            <select class="form-control " name="Currency" id="Currency">
                                @foreach (var item in Model.Currencies)
                                {
                                    if (Model.Company.Currency == item.Abbreviation || item.Abbreviation == "EUR")
                                    {
                                        <option selected value="@item.Abbreviation">@item.Name @item.Symbol</option>
                                    }
                                    else
                                    {
                                        <option value="@item.Abbreviation">@item.Name @item.Symbol</option>

                                    }
                                }
                            </select>
                        </div>
                    </div>
                </div>

                <div class="col-md-3">
                    <div class="form-group">
                        <div class="input-group input-group-dynamic">
                            <label>Select Timezone</label>
                            <select class="form-control " name="TimeZone" id="TimeZone">
                            </select>
                        </div>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label>Invoice Footer Line</label>
                        <textarea name="InvoiceLine" id="InvoiceLine">@Model.Company.InvoiceLine</textarea>
                    </div>
                </div>

                <div class="col-md-3">
                    <div class="form-group">
                        <label>Booking Link Message</label>
                        <textarea name="BookingLinkInfo" id="BookingLinkInfo">@Model.Company.BookingLinkInfo</textarea>
                    </div>
                </div>
            </div>
            <div class="row">
                @if (inTrial == "No")
                {
                    if (package.Split(',').Contains("Company Other Settings"))
                    {

                        <div class="col-md-3">
                            <div class="form-group">
                                <div class="input-group input-group-dynamic">

                                    <label class="w-100">
                                        Enter Deposit Percentage
                                    </label>
                                    <input type="number" class="form-control" name="Deposit" value="@Model.Company.Deposit" id="Deposit" />
                                </div>
                            </div>
                        </div>


                        <div class="col-md-3">
                            <div class="form-group">
                                <div class="input-group input-group-dynamic">

                                    <label class="w-100">
                                        Enter Newsletter Interval Days
                                    </label>
                                    <input type="number" class="form-control" name="NewsLetterWeekInterval" value="@Model.Company.NewsLetterWeekInterval" id="NewsLetterWeekInterval" />
                                </div>
                            </div>

                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <label>Cancellation/Rescedule Time</label>
                                <select class="form-control choices__input" name="CancellationTime" id="CancellationTime">

                                    @if (Model.Company.CancellationTime == "1 Hour")
                                    {

                                        <option selected value="1 Hour">1 Hour</option>
                                        <option value="3 Hours">3 Hours</option>
                                        <option value="5 Hours">5 Hours</option>
                                        <option value="24 Hours">24 Hours</option>
                                        <option value="48 Hours">48 Hours</option>
                                    }
                                    else if (Model.Company.CancellationTime == "3 Hours")
                                    {
                                        <option value="1 Hour">1 Hour</option>
                                        <option selected value="3 Hours">3 Hours</option>
                                        <option value="5 Hours">5 Hour</option>
                                        <option value="24 Hours">24 Hours</option>
                                        <option value="48 Hours">48 Hours</option>

                                    }
                                    else if (Model.Company.CancellationTime == "5 Hours")
                                    {
                                        <option value="1 Hour">1 Hour</option>
                                        <option value="3 Hours">3 Hours</option>
                                        <option selected value="5 Hours">5 Hours</option>
                                        <option value="24 Hours">24 Hours</option>
                                        <option value="48 Hours">48 Hours</option>
                                    }
                                    else if (Model.Company.CancellationTime == "24 Hours")
                                    {

                                        <option value="1 Hour">1 Hour</option>
                                        <option value="3 Hours">3 Hours</option>
                                        <option value="5 Hours">5 Hours</option>
                                        <option selected value="24 Hours">24 Hours</option>
                                        <option value="48 Hours">48 Hours</option>
                                    }
                                    else if (Model.Company.CancellationTime == "48 Hours")
                                    {


                                        <option value="1 Hour">1 Hour</option>
                                        <option value="3 Hours">3 Hours</option>
                                        <option value="5 Hours">5 Hours</option>
                                        <option value="24 Hours">24 Hours</option>
                                        <option selected value="48 Hours">48 Hours</option>
                                    }
                                    else
                                    {
                                        <option value="1 Hour">1 Hour</option>
                                        <option value="3 Hours">3 Hours</option>
                                        <option value="5 Hours">5 Hours</option>
                                        <option selected value="24 Hours">24 Hours</option>
                                        <option value="48 Hours">48 Hours</option>
                                    }

                                </select>
                            </div>
                        </div>
                        <div class="col-md-3">
                            <div class="form-group">
                                <div class="input-group input-group-dynamic">

                                    <label>Enter Referral Percentage </label>
                                    <input type="number" class="form-control" name="ReferralPercentage" value="@Model.Company.ReferralPercentage" id="ReferralPercentage" />
                                </div>
                            </div>
                        </div>
                        <div class="col-md-12">
                            <div class="form-group">
                                <div class="input-group input-group-dynamic">

                                    <label>Company Code</label>
                                    <input class="form-control" type="text" readonly name="CompanyCode" id="CompanyCode" value="@Model.Company.CompanyCode" />
                                </div>
                            </div>

                        </div>
                    }
                }
                else
                {

                    <div class="col-md-3">
                        <div class="form-group">
                            <div class="input-group input-group-dynamic">

                                <label>Enter Deposit Percentage </label>
                                <input type="number" class="form-control" name="Deposit" value="@Model.Company.Deposit" id="Deposit" />
                            </div>
                        </div>
                    </div>


                    <div class="col-md-3">
                        <div class="form-group">
                            <div class="input-group input-group-dynamic">

                                <label>Enter Newsletter Interval Days </label>
                                <input type="number" class="form-control" name="NewsLetterWeekInterval" value="@Model.Company.NewsLetterWeekInterval" id="NewsLetterWeekInterval" />
                            </div>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <label>Cancellation Time</label>
                            <select class="form-control choices__input" name="CancellationTime" id="CancellationTime">

                                @if (Model.Company.CancellationTime == "1 Hour")
                                {

                                    <option selected value="1 Hour">1 Hour</option>
                                    <option value="3 Hours">3 Hours</option>
                                    <option value="5 Hours">5 Hours</option>
                                    <option value="24 Hours">24 Hours</option>
                                    <option value="48 Hours">48 Hours</option>
                                }
                                else if (Model.Company.CancellationTime == "3 Hours")
                                {
                                    <option value="1 Hour">1 Hour</option>
                                    <option selected value="3 Hours">3 Hours</option>
                                    <option value="5 Hours">5 Hour</option>
                                    <option value="24 Hours">24 Hours</option>
                                    <option value="48 Hours">48 Hours</option>

                                }
                                else if (Model.Company.CancellationTime == "5 Hours")
                                {
                                    <option value="1 Hour">1 Hour</option>
                                    <option value="3 Hours">3 Hours</option>
                                    <option selected value="5 Hours">5 Hours</option>
                                    <option value="24 Hours">24 Hours</option>
                                    <option value="48 Hours">48 Hours</option>
                                }
                                else if (Model.Company.CancellationTime == "24 Hours")
                                {

                                    <option value="1 Hour">1 Hour</option>
                                    <option value="3 Hours">3 Hours</option>
                                    <option value="5 Hours">5 Hours</option>
                                    <option selected value="24 Hours">24 Hours</option>
                                    <option value="48 Hours">48 Hours</option>
                                }
                                else if (Model.Company.CancellationTime == "48 Hours")
                                {


                                    <option value="1 Hour">1 Hour</option>
                                    <option value="3 Hours">3 Hours</option>
                                    <option value="5 Hours">5 Hours</option>
                                    <option value="24 Hours">24 Hours</option>
                                    <option selected value="48 Hours">48 Hours</option>
                                }
                                else
                                {
                                    <option value="1 Hour">1 Hour</option>
                                    <option value="3 Hours">3 Hours</option>
                                    <option value="5 Hours">5 Hours</option>
                                    <option selected value="24 Hours">24 Hours</option>
                                    <option value="48 Hours">48 Hours</option>
                                }

                            </select>
                        </div>
                    </div>
                    <div class="col-md-3">
                        <div class="form-group">
                            <div class="input-group input-group-dynamic">

                                <label>Enter Referral Percentage </label>
                                <input type="number" class="form-control" name="ReferralPercentage" value="@Model.Company.ReferralPercentage" id="ReferralPercentage" />
                            </div>
                        </div>
                    </div>
                    <div class="col-md-12">
                        <div class="form-group">
                            <div class="input-group input-group-dynamic">

                                <label>Company Code</label>
                                <input class="form-control" type="text" readonly name="CompanyCode" id="CompanyCode" value="@Model.Company.CompanyCode" />
                            </div>
                        </div>
                    </div>

                }


                @if (inTrial == "No")
                {
                    if (package.Split(',').Contains("Company Other Settings"))
                    {
                        <div class="col-md-12">
                            <div class="input-group input-group-dynamic">
                                <label>Select Status for PayRoll (Comma Separated, Use Only These <span class="bg-success">"Pending" "No Show" "Paid"</span>)</label>
                                <input type="text" value="@Model.Company.StatusForPayroll" name="StatusForPayroll" id="StatusForPayroll" class="form-control" />
                            </div>
                        </div>
                    }

                }
                else
                {
                    <div class="col-md-12">
                        <div class="input-group input-group-dynamic">

                            <label>Select Status for PayRoll (Comma Separated, Use Only These <span class="bg-success">"Pending" "No Show" "Paid"</span>)</label>
                            <input type="text" value="@Model.Company.StatusForPayroll" name="StatusForPayroll" id="StatusForPayroll" class="form-control" />
                        </div>
                    </div>
                }
                <br />
                <hr />
                @if (inTrial == "No")
                {
                    <div class="form-group col-md-6">
                        @if (package.Split(',').Contains("Company Other Settings"))
                        {
                            <a class="btn btn-primary btn-round" href="@Url.Action("PriceList", "Booking", new { businessName = Model.Company.Business })">
                                PRICE LIST
                            </a>
                            <a class="btn btn-success btn-round" href="@Url.Action("AboutCompany", "Booking", new { businessName = Model.Company.Business })">
                                ABOUT COMPANY
                            </a>
                            if (Model.GiftCard != null)
                            {
                                <a class="btn btn-secondary btn-round" href="@Url.Action("Index", "OnlineGiftCard", new { businessName = Model.Company.Business })">
                                    GIFT CARD LINK
                                </a>
                            }
                        }

                        <a class="btn btn-primary btn-round" href="@Url.Action("Welcome", "Booking", new {businessName = Model.Company.Business})">
                            BOOKING LINK
                        </a>

                        @*<input type="text" class="form-control" value="@Model.BookingLink" readonly />*@
                    </div>
                }
                else
                {
                    <div class="form-group col-md-6">

                        <a class="btn btn-primary btn-round" href="@Url.Action("PriceList", "Booking", new { businessName = Model.Company.Business })">
                            PRICE LIST
                        </a>
                        <a class="btn btn-success btn-round" href="@Url.Action("AboutCompany", "Booking", new { businessName = Model.Company.Business })">
                            ABOUT COMPANY
                        </a>
                        @if (Model.GiftCard != null)
                        {
                            <a class="btn btn-secondary btn-round" href="@Url.Action("Index", "OnlineGiftCard", new { businessName = Model.Company.Business })">
                                GIFT CARD LINK
                            </a>
                        }


                        <a class="btn btn-primary btn-round" href="@Url.Action("Welcome", "Booking", new {businessName = Model.Company.Business})">
                            BOOKING LINK
                        </a>

                        @*<input type="text" class="form-control" value="@Model.BookingLink" readonly />*@
                    </div>
                }

            </div>

        </div>
    </div>

    <div class="card" style="margin-bottom:20px;">
        <div class="card-body">
            <h4 class="card-title">
                Email Details
            </h4>
            <div class="row">
                <div class="col-md-4">
                    <div class="form-group">
                        <div class="input-group input-group-dynamic">

                            <label>
                                Notification Email
                            </label>
                            <input class="form-control" value="@Model.Company.NotificationEmail" placeholder="Enter Notification Email..." type="email" name="NotificationEmail" required />
                        </div>
                    </div>
                </div>


                <div class="col-md-4">
                    <div class="form-group">
                        <div class="input-group input-group-dynamic">

                            <label>
                                Contact Email
                            </label>
                            <input class="form-control" value="@Model.Company.ContactEmail" placeholder="Enter Contact Email..." type="email" name="ContactEmail" required />
                        </div>
                    </div>
                </div>
                <div class="col-md-4">
                    <div class="form-group">
                        <div class="input-group input-group-dynamic">

                            <label>
                                Billing Email
                            </label>
                            <input class="form-control" value="@Model.Company.BillingEmail" placeholder="Enter Billing Email..." type="email" name="BillingEmail" required />
                        </div>
                    </div>
                </div>
            </div>






        </div>
    </div>
    @if (inTrial == "No")
    {
        if (package.Split(',').Contains("Stripe"))
        {
            <div class="card" style="margin-bottom:20px;">
                <div class="card-body">

                    <h4 class="card-title">
                        Stripe Details <a href="https://yourbookingplatform.com/seamless-stripe-integration-with-yourbookingplatform/" target="_blank"><i class="fa fa-info-circle"></i></a>
                    </h4>
                    <div class="row">
                        <div class="form-group col-md-4">
                            <label>Enable Integration</label>
                            <select class="form-control choices__input" name="PaymentMethodIntegration" id="PaymentMethodIntegration">
                                @if (Model.Company.PaymentMethodIntegration)
                                {
                                    <option selected value="true">Yes</option>
                                    <option value="false">No</option>
                                }
                                else
                                {
                                    <option value="true">Yes</option>
                                    <option selected value="false">No</option>
                                }
                            </select>
                        </div>
                        <div class="form-group col-md-4">
                            <div class="input-group input-group-dynamic">

                                <label>Enter API/Secret Key</label>
                                <input type="text" class="form-control" name="APIKEY" value="@Model.Company.APIKEY" id="APIKEY" />

                            </div>
                        </div>
                        <div class="form-group col-md-4">
                            <div class="input-group input-group-dynamic">

                                <label>Enter PUBLISH Key</label>
                                <input type="text" class="form-control" name="PUBLISHEDKEY" value="@Model.Company.PUBLISHEDKEY" id="PUBLISHEDKEY" />

                            </div>
                        </div>




                    </div>






                </div>
            </div>
        }
    }
    else
    {

        <div class="card" style="">
            <div class="card-body">
                <h4 class="card-title">
                    Stripe Details <a href="https://yourbookingplatform.com/seamless-stripe-integration-with-yourbookingplatform/" target="_blank"><i class="fa fa-info-circle"></i></a>
                </h4>
                <div class="row">
                    <div class="form-group col-md-4">
                        <label>Enable Integration</label>
                        <select class="form-control choices__input" name="PaymentMethodIntegration" id="PaymentMethodIntegration">
                            @if (Model.Company.PaymentMethodIntegration)
                            {
                                <option selected value="true">Yes</option>
                                <option value="false">No</option>
                            }
                            else
                            {
                                <option value="true">Yes</option>
                                <option selected value="false">No</option>
                            }
                        </select>
                    </div>
                    <div class="form-group col-md-4">
                        <div class="input-group input-group-dynamic">

                            <label>Enter API/Secret Key</label>
                            <input type="text" class="form-control" name="APIKEY" value="@Model.Company.APIKEY" id="APIKEY" />

                        </div>
                    </div>
                    <div class="form-group col-md-4">
                        <div class="input-group input-group-dynamic">

                            <label>Enter PUBLISH Key</label>
                            <input type="text" class="form-control" name="PUBLISHEDKEY" value="@Model.Company.PUBLISHEDKEY" id="PUBLISHEDKEY" />

                        </div>
                    </div>



                </div>






            </div>
        </div>

    }

</form>


<button id="ActionBtn" class="btn btn-primary btn-round my-2">
    <i class="material-icons">edit</i>
    UPDATE
    <div class="ripple-container"></div>
</button>
<script>



    var countryTimeZones = {
        "Afghanistan": ["Asia/Kabul"],
        "Albania": ["Europe/Tirane"],
        "Algeria": ["Africa/Algiers"],
        "Andorra": ["Europe/Andorra"],
        "Angola": ["Africa/Luanda"],
        "Argentina": [
            "America/Argentina/Buenos_Aires",
            "America/Argentina/Cordoba",
            "America/Argentina/Salta",
            "America/Argentina/Jujuy",
            "America/Argentina/Tucuman",
            "America/Argentina/Catamarca",
            "America/Argentina/La_Rioja",
            "America/Argentina/San_Juan",
            "America/Argentina/Mendoza",
            "America/Argentina/San_Luis",
            "America/Argentina/Rio_Gallegos",
            "America/Argentina/Ushuaia"
        ],
        "Armenia": ["Asia/Yerevan"],
        "Australia": [
            "Australia/Lord_Howe",
            "Antarctica/Macquarie",
            "Australia/Hobart",
            "Australia/Melbourne",
            "Australia/Sydney",
            "Australia/Broken_Hill",
            "Australia/Brisbane",
            "Australia/Lindeman",
            "Australia/Adelaide",
            "Australia/Darwin",
            "Australia/Perth",
            "Australia/Eucla"
        ],
        "Austria": ["Europe/Vienna"],
        "Azerbaijan": ["Asia/Baku"],
        "Bahamas": ["America/Nassau"],
        "Bahrain": ["Asia/Bahrain"],
        "Bangladesh": ["Asia/Dhaka"],
        "Barbados": ["America/Barbados"],
        "Belarus": ["Europe/Minsk"],
        "Belgium": ["Europe/Brussels"],
        "Belize": ["America/Belize"],
        "Benin": ["Africa/Porto-Novo"],
        "Bhutan": ["Asia/Thimphu"],
        "Bolivia": ["America/La_Paz"],
        "Botswana": ["Africa/Gaborone"],
        "Brazil": [
            "America/Noronha",
            "America/Belem",
            "America/Fortaleza",
            "America/Recife",
            "America/Araguaina",
            "America/Maceio",
            "America/Bahia",
            "America/Sao_Paulo",
            "America/Campo_Grande",
            "America/Cuiaba",
            "America/Santarem",
            "America/Porto_Velho",
            "America/Boa_Vista",
            "America/Manaus",
            "America/Eirunepe",
            "America/Rio_Branco"
        ],
        "Brunei": ["Asia/Brunei"],
        "Bulgaria": ["Europe/Sofia"],
        "Burkina Faso": ["Africa/Ouagadougou"],
        "Burundi": ["Africa/Bujumbura"],
        "Cambodia": ["Asia/Phnom_Penh"],
        "Cameroon": ["Africa/Douala"],
        "Canada": [
            "America/St_Johns",
            "America/Halifax",
            "America/Glace_Bay",
            "America/Moncton",
            "America/Goose_Bay",
            "America/Blanc-Sablon",
            "America/Toronto",
            "America/Iqaluit",
            "America/Atikokan",
            "America/Winnipeg",
            "America/Resolute",
            "America/Rankin_Inlet",
            "America/Regina",
            "America/Swift_Current",
            "America/Edmonton",
            "America/Cambridge_Bay",
            "America/Inuvik",
            "America/Creston",
            "America/Dawson_Creek",
            "America/Fort_Nelson",
            "America/Whitehorse",
            "America/Dawson",
            "America/Vancouver"
        ],
        "Cape Verde": ["Atlantic/Cape_Verde"],
        "Chad": ["Africa/Ndjamena"],
        "Chile": [
            "America/Santiago",
            "America/Coyhaique",
            "America/Punta_Arenas",
            "Pacific/Easter"
        ],
        "China": ["Asia/Shanghai", "Asia/Urumqi"],
        "Colombia": ["America/Bogota"],
        "Comoros": ["Indian/Comoro"],
        "Costa Rica": ["America/Costa_Rica"],
        "Croatia": ["Europe/Zagreb"],
        "Cuba": ["America/Havana"],
        "Cyprus": ["Asia/Nicosia", "Asia/Famagusta"],
        "Czech Republic": ["Europe/Prague"],
        "Denmark": ["Europe/Copenhagen"],
        "Djibouti": ["Africa/Djibouti"],
        "Dominica": ["America/Dominica"],
        "Dominican Republic": ["America/Santo_Domingo"],
        "East Timor": ["Asia/Dili"],
        "Ecuador": ["America/Guayaquil", "Pacific/Galapagos"],
        "Egypt": ["Africa/Cairo"],
        "El Salvador": ["America/El_Salvador"],
        "Equatorial Guinea": ["Africa/Malabo"],
        "Eritrea": ["Africa/Asmara"],
        "Estonia": ["Europe/Tallinn"],
        "Ethiopia": ["Africa/Addis_Ababa"],
        "Fiji": ["Pacific/Fiji"],
        "Finland": ["Europe/Helsinki"],
        "France": ["Europe/Paris"],
        "Gabon": ["Africa/Libreville"],
        "Gambia": ["Africa/Banjul"],
        "Georgia": ["Asia/Tbilisi"],
        "Germany": ["Europe/Berlin", "Europe/Busingen"],
        "Ghana": ["Africa/Accra"],
        "Greece": ["Europe/Athens"],
        "Grenada": ["America/Grenada"],
        "Guatemala": ["America/Guatemala"],
        "Guinea": ["Africa/Conakry"],
        "Guinea-Bissau": ["Africa/Bissau"],
        "Guyana": ["America/Guyana"],
        "Haiti": ["America/Port-au-Prince"],
        "Honduras": ["America/Tegucigalpa"],
        "Hungary": ["Europe/Budapest"],
        "Iceland": ["Atlantic/Reykjavik"],
        "India": ["Asia/Kolkata"],
        "Indonesia": [
            "Asia/Jakarta",
            "Asia/Pontianak",
            "Asia/Makassar",
            "Asia/Jayapura"
        ],
        "Iran": ["Asia/Tehran"],
        "Iraq": ["Asia/Baghdad"],
        "Ireland": ["Europe/Dublin"],
        "Israel": ["Asia/Jerusalem"],
        "Italy": ["Europe/Rome"],
        "Jamaica": ["America/Jamaica"],
        "Japan": ["Asia/Tokyo"],
        "Jordan": ["Asia/Amman"],
        "Kazakhstan": [
            "Asia/Almaty",
            "Asia/Qyzylorda",
            "Asia/Qostanay",
            "Asia/Aqtobe",
            "Asia/Aqtau",
            "Asia/Atyrau",
            "Asia/Oral"
        ],
        "Kenya": ["Africa/Nairobi"],
        "Kiribati": ["Pacific/Tarawa", "Pacific/Kanton", "Pacific/Kiritimati"],
        "Kuwait": ["Asia/Kuwait"],
        "Kyrgyzstan": ["Asia/Bishkek"],
        "Laos": ["Asia/Vientiane"],
        "Latvia": ["Europe/Riga"],
        "Lebanon": ["Asia/Beirut"],
        "Lesotho": ["Africa/Maseru"],
        "Liberia": ["Africa/Monrovia"],
        "Libya": ["Africa/Tripoli"],
        "Liechtenstein": ["Europe/Vaduz"],
        "Lithuania": ["Europe/Vilnius"],
        "Luxembourg": ["Europe/Luxembourg"],
        "Madagascar": ["Indian/Antananarivo"],
        "Malawi": ["Africa/Blantyre"],
        "Malaysia": ["Asia/Kuala_Lumpur", "Asia/Kuching"],
        "Maldives": ["Indian/Maldives"],
        "Mali": ["Africa/Bamako"],
        "Malta": ["Europe/Malta"],
        "Marshall Islands": ["Pacific/Majuro", "Pacific/Kwajalein"],
        "Mauritania": ["Africa/Nouakchott"],
        "Mauritius": ["Indian/Mauritius"],
        "Mexico": [
            "America/Mexico_City",
            "America/Cancun",
            "America/Merida",
            "America/Monterrey",
            "America/Matamoros",
            "America/Chihuahua",
            "America/Ciudad_Juarez",
            "America/Ojinaga",
            "America/Mazatlan",
            "America/Bahia_Banderas",
            "America/Hermosillo",
            "America/Tijuana"
        ],
        "Micronesia": ["Pacific/Chuuk", "Pacific/Pohnpei", "Pacific/Kosrae"],
        "Moldova": ["Europe/Chisinau"],
        "Monaco": ["Europe/Monaco"],
        "Mongolia": ["Asia/Ulaanbaatar", "Asia/Hovd"],
        "Montenegro": ["Europe/Podgorica"],
        "Morocco": ["Africa/Casablanca"],
        "Mozambique": ["Africa/Maputo"],
        "Namibia": ["Africa/Windhoek"],
        "Nauru": ["Pacific/Nauru"],
        "Nepal": ["Asia/Kathmandu"],
        "Netherlands": ["Europe/Amsterdam"],
        "New Zealand": ["Pacific/Auckland", "Pacific/Chatham"],
        "Nicaragua": ["America/Managua"],
        "Niger": ["Africa/Niamey"],
        "Nigeria": ["Africa/Lagos"],
        "North Macedonia": ["Europe/Skopje"],
        "Norway": ["Europe/Oslo"],
        "Oman": ["Asia/Muscat"],
        "Pakistan": ["Asia/Karachi"],
        "Palau": ["Pacific/Palau"],
        "Panama": ["America/Panama"],
        "Papua New Guinea": ["Pacific/Port_Moresby", "Pacific/Bougainville"],
        "Paraguay": ["America/Asuncion"],
        "Peru": ["America/Lima"],
        "Philippines": ["Asia/Manila"],
        "Poland": ["Europe/Warsaw"],
        "Portugal": ["Europe/Lisbon", "Atlantic/Madeira", "Atlantic/Azores"],
        "Qatar": ["Asia/Qatar"],
        "Romania": ["Europe/Bucharest"],
        "Russia": [
            "Europe/Kaliningrad",
            "Europe/Moscow",
            "Europe/Kirov",
            "Europe/Volgograd",
            "Europe/Astrakhan",
            "Europe/Saratov",
            "Europe/Ulyanovsk",
            "Europe/Samara",
            "Asia/Yekaterinburg",
            "Asia/Omsk",
            "Asia/Novosibirsk",
            "Asia/Barnaul",
            "Asia/Tomsk",
            "Asia/Novokuznetsk",
            "Asia/Krasnoyarsk",
            "Asia/Irkutsk",
            "Asia/Chita",
            "Asia/Yakutsk",
            "Asia/Khandyga",
            "Asia/Vladivostok",
            "Asia/Ust-Nera",
            "Asia/Magadan",
            "Asia/Sakhalin",
            "Asia/Srednekolymsk",
            "Asia/Kamchatka",
            "Asia/Anadyr"
        ],
        "Rwanda": ["Africa/Kigali"],
        "San Marino": ["Europe/San_Marino"],
        "Saudi Arabia": ["Asia/Riyadh"],
        "Senegal": ["Africa/Dakar"],
        "Serbia": ["Europe/Belgrade"],
        "Seychelles": ["Indian/Mahe"],
        "Sierra Leone": ["Africa/Freetown"],
        "Singapore": ["Asia/Singapore"],
        "Slovakia": ["Europe/Bratislava"],
        "Slovenia": ["Europe/Ljubljana"],
        "Solomon Islands": ["Pacific/Guadalcanal"],
        "Somalia": ["Africa/Mogadishu"],
        "South Africa": ["Africa/Johannesburg"],
        "South Sudan": ["Africa/Juba"],
        "Spain": ["Europe/Madrid", "Africa/Ceuta", "Atlantic/Canary"],
        "Sri Lanka": ["Asia/Colombo"],
        "Sudan": ["Africa/Khartoum"],
        "Suriname": ["America/Paramaribo"],
        "Sweden": ["Europe/Stockholm"],
        "Switzerland": ["Europe/Zurich"],
        "Syria": ["Asia/Damascus"],
        "Taiwan": ["Asia/Taipei"],
        "Tajikistan": ["Asia/Dushanbe"],
        "Tanzania": ["Africa/Dar_es_Salaam"],
        "Thailand": ["Asia/Bangkok"],
        "Togo": ["Africa/Lome"],
        "Tonga": ["Pacific/Tongatapu"],
        "Tunisia": ["Africa/Tunis"],
        "Turkey": ["Europe/Istanbul"],
        "Turkmenistan": ["Asia/Ashgabat"],
        "Tuvalu": ["Pacific/Funafuti"],
        "Uganda": ["Africa/Kampala"],
        "Ukraine": ["Europe/Simferopol", "Europe/Kyiv"],
        "United Arab Emirates": ["Asia/Dubai"],
        "United Kingdom": ["Europe/London"],
        "United States": [
            "America/New_York",
            "America/Detroit",
            "America/Kentucky/Louisville",
            "America/Kentucky/Monticello",
            "America/Indiana/Indianapolis",
            "America/Indiana/Vincennes",
            "America/Indiana/Winamac",
            "America/Indiana/Marengo",
            "America/Indiana/Petersburg",
            "America/Indiana/Vevay",
            "America/Chicago",
            "America/Indiana/Tell_City",
            "America/Indiana/Knox",
            "America/Menominee",
            "America/North_Dakota/Center",
            "America/North_Dakota/New_Salem",
            "America/North_Dakota/Beulah",
            "America/Denver",
            "America/Boise",
            "America/Phoenix",
            "America/Los_Angeles",
            "America/Anchorage",
            "America/Juneau",
            "America/Sitka",
            "America/Metlakatla",
            "America/Yakutat",
            "America/Nome",
            "America/Adak",
            "Pacific/Honolulu"
        ],
        "Uruguay": ["America/Montevideo"],
        "Uzbekistan": ["Asia/Samarkand", "Asia/Tashkent"],
        "Vanuatu": ["Pacific/Efate"],
        "Vatican City": ["Europe/Vatican"],
        "Venezuela": ["America/Caracas"],
        "Vietnam": ["Asia/Ho_Chi_Minh"],
        "Yemen": ["Asia/Aden"],
        "Zambia": ["Africa/Lusaka"],
        "Zimbabwe": ["Africa/Harare"]
    };
    function toggleTimeZone() {
        var selectedCountry = $("#CountryName").val()?.trim();

        if (selectedCountry && countryTimeZones[selectedCountry]) {
            var zones = countryTimeZones[selectedCountry];
            var $timeZoneSelect = $("#TimeZone");

            $timeZoneSelect.empty(); // Clear existing

            $.each(zones, function (i, zone) {
                $timeZoneSelect.append($("<option>", {
                    value: zone,
                    text: zone
                }));
            });
        } else {
            $("#TimeZone").html("<option value=''>No timezones found</option>");
        }
    }
    $(document).ready(function () {
        toggleTimeZone();
    });

    $("#CountryName").on("change", function () {
        toggleTimeZone();
    });

    $("#Business").on("input", function () {
        var invalidChars = /[<>*%:&\\?]/g;

        if (invalidChars.test($(this).val())) {
            alert("Special characters are not allowed!");
            $(this).val($(this).val().replace(invalidChars, ''));
        }
    });

    function showSuccessAlert() {
        Swal.fire({
            icon: 'success',
            title: 'Image Uploaded Successfully!',
            showConfirmButton: true
        });
    }

    function showFormSubmitted() {
        Swal.fire({
            icon: 'success',
            title: 'Company Updated Successfully! ',
            text: 'Redirecting you to the company page',
            showConfirmButton: false
        });
    }


    $(document).ready(function () {
        var elements = document.getElementsByClassName('choices__input');

        // Check if there are any elements found
        if (elements.length > 0) {
            // Loop through each element and initialize Choices for it
            for (var i = 0; i < elements.length; i++) {
                const example = new Choices(elements[i], {
                    searchEnabled: false,
                    itemSelectText: ''
                });
            }
        }
    });
    function showFieldsError(fieldNames) {
        var message = 'These are the required fields:\n' + fieldNames.join(', ');

        Swal.fire({
            icon: 'error',
            title: 'Required Fields Missing',
            text: message,
            showConfirmButton: true
        });
    }
    $("#LogoUpload").change(function () {

        showLoadingSpinner();
        var element = this;
        var formData = new FormData();
        var totalFiles = element.files.length;

        for (var i = 0; i < totalFiles; i++) {
            var file = element.files[i];
            formData.append("Logo", file);
        }

        $.ajax({
            type: 'POST',
            url: '@Url.Action("UploadImage", "Shared")',
            data: formData,
            dataType: 'json',
            contentType: false,
            processData: false
        })
            .done(function (response) {

                if (response.Success)
                {
                    // For now, we'll just delay the fade out for demonstration
                    hideLoadingSpinner();
                    $("#Logo").val(response.DocURL);
                    $("#MainThumb").attr("src", response.DocURL);
                    showSuccessAlert();
                    setTimeout(function () {
                        $("#overlay").fadeOut();
                        $("#centeredElement").fadeOut();
                    }, 2000);
                }

            })
            .fail(function (XMLHttpRequest, textStatus, errorThrown) {
                alert("FAIL");
            })
    });

    $("#ActionBtn").click(function () {


        var requiredFields = $('#MainCompanyRegisterForm :input[required]').filter(function () {
            return !$(this).val();
        });

        var requiredFieldNames = requiredFields.map(function () {
            return $(this).attr('name');
        }).get();

        if (requiredFieldNames.length > 0) {
            showFieldsError(requiredFieldNames);
        }
        else {
            var errorFields = $('.form-group.has-error input');
            var errorFieldNames = [];
            errorFields.each(function () {
                var fieldName = $(this).attr('name');
                errorFieldNames.push(fieldName);
            });
            if (errorFieldNames.length > 0) {
                showFieldsError(errorFieldNames);

            } else {
                // Submit the form or perform other actions
                showLoadingSpinner(); // Fade in the loader element

                $.ajax({
                    url: '@Url.Action("Action", "Company")',
                    type: "post",
                    data: $("#MainCompanyRegisterForm").serialize()
                })
                    .done(function (response) {
                        if (response.success) {
                            showFormSubmitted();
                            window.location.href = '@Url.Action("Settings", "User")';
                        } else {
                            $(".errorDiv").html(response.Message);
                        }
                    })
                    .always(function () {
                        // This function is executed after the AJAX request is completed (success or error)
                        hideLoadingSpinner(); // Fade out the loader element
                    });
            }

        }

    });
</script>

