@model TheBookingPlatform.ViewModels.AppointmentListingViewModel
@{
    ViewBag.Title = "_ShowWaitingLists";
}
<style>
    .dropdown {
        position: relative;
        display: inline-block;
    }

    /* Style for the dropdown button itself */
    .dropbtn {
        background-color: #3498db;
        color: white;
        padding: 10px;
        font-size: 16px;
        border: none;
        cursor: pointer;
    }

    /* Style for the dropdown content */
    .dropdown-content {
        display: none;
        position: absolute;
        background-color: #f9f9f9;
        min-width: 160px;
        box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2);
        z-index: 1;
        transition: display 0.3s ease-in-out;
    }

        /* Style for the dropdown items (buttons) */
        .dropdown-content button {
            color: black;
            padding: 12px 16px;
            text-decoration: none;
            display: block;
            text-align: left;
            cursor: pointer;
        }

            /* Change color on hover for dropdown items (buttons) */
            .dropdown-content button:hover {
                background-color: #ddd;
            }

</style>

<div id="ModalContent" class="modal-content">
    <div class="modal-body">
        <h4 class="modal-title">
            Waiting List for @Model.SelectedEmployee.Name
        </h4>
        <hr />
        <div style="width: 100%;">
            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>
                            Date
                        </th>
                        <th>
                            Customer
                        </th>                        
                        <th>
                            Services
                        </th>
                        <th>
                            Duration
                        </th>
                        <th>
                            Notified
                        </th>
                        <th>
                            Employee
                        </th>
                        <th>
                            Actions
                        </th>
                       
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.MainWaitingLists)
                    {
                        if (item.WaitingList.EmployeeID == 0)
                        {
                            <tr>
                                <td>
                                    @item.WaitingList.Date.ToString("yyyy-MM-dd")
                                </td>
                                @if (item.Customer != null)
                                {
                                    <td>
                                        @item.Customer.FirstName @item.Customer.LastName
                                    </td>
                                }
                                else
                                {
                                    <td>
                                        Walk In
                                    </td>
                                }
                                <td>
                                    <select class="form-control" name="Services" id="Services">
                                        @foreach (var service in item.Services)
                                        {
                                            <option value="@service.Service">
                                                @service.Service
                                            </option>
                                        }
                                    </select>
                                </td>
                                <td>
                                    @item.TotalDuration mins
                                </td>
                                <td class="ReminderTH">
                                    @item.WaitingList.Reminder
                                </td>
                                <td>
                                    --
                                </td>
                                <td>
                                    <div class="dropdown">
                                        <button type="button" class="dropbtn btn btn-sm btn-primary"><span class="material-icons">more_horiz</span></button>
                                        <div class="dropdown-content">
                                            <button onclick="window.location.href='@Url.Action("WaitingListAppointment", "Appointment", new {WaitingListID=item.WaitingList.ID})'" type="button" class="btn btn-sm btn-success">CREATE APPOINTMENT</button>
                                            <button id="EmailWaitingList" data-id="@item.WaitingList.ID" type="button" class="EmailBtn btn btn-sm btn-info">Email</button>
                                            <button id="DeleteButton" data-id="@item.WaitingList.ID" type="button" class="DeleteButton btn btn-sm btn-danger">DELETE</button>
                                        </div>
                                    </div>
                                </td>

                            </tr>
                        }
                        else
                        {
                <tr>
                    <td>
                        @item.WaitingList.Date.ToString("yyyy-MM-dd")
                    </td>
                    @if (item.Customer != null)
                    {
                        <td>
                            @item.Customer.FirstName @item.Customer.LastName
                        </td>
                    }
                    else
                    {
                        <td>
                            Walk In
                        </td>
                    }
                    <td>
                        <select class="form-control" name="Services" id="Services">
                            @foreach (var service in item.Services)
                            {
                                <option value="@service.Service">
                                    @service.Service
                                </option>
                            }
                        </select>
                    </td>
                    <td>
                        @item.TotalDuration mins
                    </td>
                    <td class="ReminderTH">
                        @item.WaitingList.Reminder
                    </td>
                    <td>@item.Employee.Name</td>
                    <td>
                        <div class="dropdown">
                            <button type="button" class="dropbtn btn btn-sm btn-primary"><span class="material-icons">more_horiz</span></button>
                            <div class="dropdown-content">
                                <button onclick="window.location.href='@Url.Action("WaitingListAppointment", "Appointment", new {WaitingListID=item.WaitingList.ID})'" type="button" class="btn btn-sm btn-success">CREATE APPOINTMENT</button>
                                <button id="EmailWaitingList" data-id="@item.WaitingList.ID" type="button" class="EmailBtn btn btn-sm btn-info">Email</button>
                                <button id="DeleteButton"  data-id="@item.WaitingList.ID" type="button" class="DeleteButton btn btn-sm btn-danger">DELETE</button>
                            </div>
                        </div>
                    </td>

                </tr>
                        }

                    }
                </tbody>
            </table>

        </div>

    </div>
</div>


<script>
    $(document).ready(function () {
        $(".dropbtn").click(function () {
            $(this).closest(".dropdown").find(".dropdown-content").slideToggle("fast");
        });

        $(".EmailBtn").click(function () {
            // Assuming firstName, lastName, email, and mobileNumber are defined somewhere in your code
            var WaitingListID = $(this).attr("data-id");
            var $row = $(this).closest("tr"); // Find the closest parent 'tr' element
            $.ajax({
                url: '@Url.Action("EmailCustomerForWaitinglist", "Appointment")',
                type: "post",
                data: { WaitingListID: WaitingListID },
                dataType: "json", // Assuming the response is in JSON format
            })
                .done(function (response) {
                    if (response.success) {
                        // Handle success, if needed
                        alert("Mail Sent Successfully");
                        $row.find('.ReminderTH').text("True"); // Change the text of the specific th

                    } else {
                        // Handle failure or other conditions
                        alert("Mail UnSuccessfully");
                    }
                })
                .fail(function (jqXHR, textStatus, errorThrown) {
                    // Handle AJAX request failure
                    console.error("AJAX request failed: " + textStatus, errorThrown);
                });
        });

        $(".DeleteButton").click(function () {
            // Assuming firstName, lastName, email, and mobileNumber are defined somewhere in your code
            var WaitingListID = $(this).attr("data-id");
            var $row = $(this).closest("tr"); // Find the closest parent 'tr' element
            var confirmation = confirm("Are you sure you want to delete this waitinglist?");
            if (confirmation) {
                $.ajax({
                    url: '@Url.Action("DeleteWaitingList", "Appointment")',
                    type: "post",
                    data: { WaitingListID: WaitingListID },
                    dataType: "json", // Assuming the response is in JSON format
                })
                    .done(function (response) {
                        if (response.success) {
                            // Handle success, if needed
                            alert("Deleted Successfully");
                            if ($row.length > 0) {
                                $row.remove();
                            } else {
                                console.error("Row not found for deletion");
                            }
                        } else {
                            // Handle failure or other conditions
                            alert("Mail UnSuccessfully");
                        }
                    })
                    .fail(function (jqXHR, textStatus, errorThrown) {
                        // Handle AJAX request failure
                        console.error("AJAX request failed: " + textStatus, errorThrown);
                    });
            } else {
                return;
            }
        });

    });

</script>