@model TheBookingPlatform.ViewModels.ServiceActionViewModel
@{
    ViewBag.Title = "Action";
}

<style>
    label {
        width: 100%;
        margin-left: 0px;
        margin-bottom: 0px;
        margin-top: 10px;
    }

    .table > .table > tbody > tr > th, .table > tfoot > tr > th, .table > thead > tr > td, .table > tbody > tr > td, .table > tfoot > tr > td {
        padding: 10px 8px;
        vertical-align: middle;
    }

    .form-group .checkbox label, .form-group .radio label, .form-group label, .form-group .label-on-left, .form-group .label-on-right {
        font-size: 14px;
        line-height: 1.428571429;
        color: black;
        font-weight: 400;
    }

    .checkbox label {
        cursor: pointer;
        padding-left: 0;
        color: black;
    }
</style>
    <div style="background: #F0F2F5" class="modal-body">
        <form id="actionForm" class="row bg-white">
            <div class="col-md-8">
                <div class="card mb-2">
                    <div class="card-body">
                        @if (Model.ID != 0)
                        {
                            <h2 class="card-title">
                                Edit Service
                            </h2>
                        }
                        else
                        {
                            <h2 class="card-title">
                                Create Service
                            </h2>
                        }
                        <div style="" class="row">
                            <div class="input-group input-group-dynamic w-auto">

                                <div class="form-group">
                                    <label>
                                        Service Name
                                    </label>
                                    <input type="hidden" name="ID" value="@Model.ID" id="ID" />
                                    <input oninput="ClearBorder()" type="text" id="Name" value="@Model.Name" class="form-control" name="Name" />
                                </div>
                            </div>
                            <div id="CategoryPicker" style="margin-top:2px;" class="form-group w-auto">
                                <div class="input-group input-group-dynamic">

                                    <label>
                                        Category
                                    </label>
                                    <select onchange="ClearBorder()" id="Category" class="form-control" name="Category">
                                        @foreach (var item in Model.ServiceCategories)
                                        {
                                            if (item.Name.Trim() == Model.Category?.Trim())
                                            {
                                                <option data-type="@item.Type" data-id="@item.ID" selected value="@item.Name">@item.Name</option>

                                            }
                                            else
                                            {
                                                <option data-type="@item.Type" data-id="@item.ID" value="@item.Name">@item.Name</option>
                                            }
                                        }
                                    </select>

                                </div>
                            </div>
                            <button style="margin-top:40px;" data-href="@Url.Action("ActionCategory", "Service")" type="button" class="data-btn btn w-auto btn-sm btn-round btn-success btn-icon-text" data-bs-toggle="modal" data-bs-target="#actionModal">ADD MORE +</button>


                        </div>



                        <div class="row">
                            <!-- Enable Promo Price Checkbox -->
                            <div class="col-md-4" style="display:flex;align-items:end;">
                                <div class="form-check" style="padding-left:0px !important;">
                                    <input @(Model.HavePromo ? "checked":"") type="checkbox" class="form-check-input" id="togglePromoPrice" />
                                    <input type="hidden" value="@Model.HavePromo" class="d-none" name="HavePromo" id="HavePromo" />

                                    <label class="form-check-label" for="togglePromoPrice">Enable Promo Price</label>
                                </div>
                            </div>

                            <!-- Promo Price Input (Initially Hidden) -->
                            <div class="col-md-4" id="PriceDDBox" style="display: none;">
                                <div class="input-group input-group-dynamic">
                                    <div class="form-group">
                                        <label>Price</label>
                                        <input type="number" value="@Model.PromoPrice" class="form-control" id="PromoPrice" name="PromoPrice" />
                                    </div>
                                </div>
                            </div>

                            <!-- Regular Price Input -->
                            <div class="col-md-4">
                                <div class="input-group input-group-dynamic">
                                    <div class="form-group">
                                        <label id="ddLabel">Price</label>
                                        <input type="number" value="@Model.Price" class="form-control" name="Price" id="Price" />
                                    </div>
                                </div>
                            </div>

                            <!-- VAT Dropdown -->
                            <div class="col-md-4">
                                <div class="input-group input-group-dynamic">
                                    <div class="form-group" style="margin-top: 2px;">
                                        <label>VAT</label>
                                        <select id="Vat" class="choices__input" name="Vat" data-style="select-with-transition" title="Choose Vat" data-size="100">
                                            @foreach (var item in Model.Vats)
                                            {
                                                if (item.Name.Trim().ToLower() == "no vat")
                                                {
                                                    <option selected value="@item.Name">@item.Name</option>
                                                }
                                                else
                                                {
                                                    if (item.Name == Model.VAT)
                                                    {
                                                        <option selected value="@item.Name">@item.Name (@item.Percentage %)</option>
                                                    }
                                                    else
                                                    {
                                                        <option value="@item.Name">@item.Name (@item.Percentage %)</option>
                                                    }
                                                }
                                            }
                                        </select>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="row d-none">
                            <div class="col-md-12">
                                <div class="form-check" style=" padding-left: 0em;">
                                    <label>
                                        @if (Model.DoesRequiredProcessing == true)
                                        {
                                            <input type="checkbox" class="form-check-input" checked name="DoesRequiredProcessingCB" id="DoesRequiredProcessingCB">
                                        }
                                        else
                                        {
                                            <input type="checkbox" class="form-check-input" name="DoesRequiredProcessingCB" id="DoesRequiredProcessingCB">

                                        }
                                        This service requires processing time
                                    </label>
                                    <input type="hidden" name="DoesRequiredProcessing" id="DoesRequiredProcessing" />
                                </div>
                            </div>
                        </div>

                        <div id="NotRequiredProcessingRow" class="row">
                            <div class="form-group col-md-6">
                                <div class="input-group input-group-dynamic">

                                    <label>
                                        Duration
                                    </label>
                                    <input type="text" class="form-control time-input" id="Duration" name="Duration" value="@Model.Duration" />
                                </div>
                            </div>

                            <div id="NOSBOX" class="form-group col-md-6">
                                <div class="input-group input-group-dynamic">

                                    <label>
                                        No Of Sessions
                                    </label>
                                    <input type="number" class="form-control" id="NumberofSessions" name="NumberofSessions" value="@Model.NumberofSessions" />
                                </div>
                            </div>
                        </div>
                        <div style="display:none;" id="RequiredProcessingRow">
                            <div class="col-md-4">
                                <div class="input-group input-group-dynamic">

                                    <div class="form-group">
                                        <label>
                                            Setup
                                        </label>
                                        <input type="text" value="@Model.Setup" id="Setup" class="form-control time-input" name="Setup" />
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="input-group input-group-dynamic">

                                    <div class="form-group">
                                        <label>
                                            Processing
                                        </label>
                                        <input type="text" value="@Model.Processing" id="Processing" class="form-control time-input" name="Processing" />
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="input-group input-group-dynamic">

                                    <div class="form-group">
                                        <label>
                                            Finish
                                        </label>
                                        <input type="text" class="form-control time-input" id="Finish" value="@Model.Finish" name="Finish" />
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>








                </div>

                <div class="card">
                    <div class="card-body">
                        <h4 class="card-title">Resources Details</h4>


                        <h4 class="card-header-text">Employees</h4>
                        <button data-href="@Url.Action("ActionEmployee", "Service")" type="button" class="data-btn btn btn-sm btn-round btn-success btn-icon-text" data-bs-toggle="modal" data-bs-target="#actionModal">ADD MORE +</button>
                        <table id="EmployeeTable" class="table">
                            <thead>
                                <tr>
                                    <td style="width:0px;">
                                        <div class="form-check">
                                            <label>
                                                <input class="form-check-input" type="checkbox" id="selectAllEmployee">
                                            </label>
                                        </div>
                                    </td>
                                    <th>
                                        <label for="selectAllEmployee">All Employees</label>
                                        <i style="cursor:pointer;" id="ArrowKeyEmployee" class="fa fa-chevron-circle-down"></i>
                                    </th>
                                </tr>
                            </thead>
                            <tbody @if (Model.ServiceEmployee == "" || Model.ServiceEmployee == null) { <text> style="display:none;" </text> }>
                                @foreach (var item in Model.Employees)
                                {


                                    <tr>
                                        <td>
                                            <div class="form-check">
                                                <label>
                                                    @if (!string.IsNullOrWhiteSpace(Model.ServiceEmployee) && Model.ServiceEmployee.Split(',').Contains(item.ID.ToString()))
                                                    {
                                                        <input type="checkbox" data-id="@item.ID" checked value="@item.Name" class="employee-checkbox form-check-input" id="Emp_@item.ID">
                                                    }

                                                    else
                                                    {
                                                        <input type="checkbox" data-id="@item.ID" value="@item.Name" class="employee-checkbox form-check-input" id="Emp_@item.ID">

                                                    }
                                                </label>
                                            </div>
                                        </td>
                                        <td>
                                            <label style="margin-top:5px;" for="Emp_@item.ID">@item.Name</label>

                                        </td>
                                    </tr>
                                }

                            </tbody>
                        </table>

                        <input hidden type="text" id="employeeNames" name="Employee" placeholder="Selected employees...">


                    </div>
                </div>

            </div>

            <div class="col-md-4">
                <div style="display:flex;">

                    <h4 style="margin-right:10px;" class="card-title mb-2"><button style=" padding: 5px 30px;" type="button" class="btn btn-sm btn-block btn-round btn-primary" id="ShowTools">Needs Tools?</button></h4>
                    <h4 class="card-title mb-2"><button type="button" style=" padding: 5px 30px;" class="btn btn-sm btn-round btn-block btn-primary" id="ShowRooms">Needs Room?</button></h4>

                </div>
                <h4 class="card-title mb-2"><button type="button" style="margin-top:-20px;" class="btn btn-sm btn-block btn-round btn-primary" id="ShowDescription">Needs Description?</button></h4>





                <div @if (Model.Tool == "" || Model.Tool == null) { <text> style="display:none;" </text> } id="ToolsCard" class="card mb-2">
                    <div class="card-body">

                        <h4 class="card-title">Tools</h4>
                        <i style="cursor:pointer;float:right" id="CloseToolsCard" onclick="ToggleToolsCard()" class="material-icons">close</i>
                        <button data-href="@Url.Action("ActionResource", "Service", new {Type = "Tool"})" type="button" class="data-btn btn btn-sm btn-round btn-success btn-icon-text" data-bs-toggle="modal" data-bs-target="#actionModal">ADD MORE +</button>
                        <table id="ToolsTable" class="table table-striped">
                            <thead>
                                <tr>
                                    <th style="width:0px;">
                                        <div class="form-check">
                                            <label>
                                                <input type="checkbox" class="form-check-input" id="selectAllTool">
                                            </label>
                                        </div>
                                    </th>
                                    <th style=" display: flex; margin-top: 10px; ">
                                        <label for="selectAllTool   ">All Tools</label>
                                        <i style="cursor:pointer;" id="ArrowKeyTool" class="fa fa-chevron-circle-down"></i>

                                    </th>
                                </tr>
                            </thead>
                            <tbody @if (Model.Tool == "" || Model.Tool == null) { <text> style="display:none;" </text> }>
                                @foreach (var item in Model.Tools)
                                {
                                    <tr>
                                        <td>
                                            <div class="checkbox form-horizontal-checkbox">
                                                <label>
                                                    @if (!string.IsNullOrWhiteSpace(Model.Tool) && Model.Tools.Any(x => Model.Tool.Split(',').Any(e => e.ToLower().Trim() == x.Name.ToLower().Trim())))
                                                    {
                                                        <input checked type="checkbox" value="@item.Name" class="tool-checkbox" id="Tool_@item.ID">
                                                    }
                                                    else
                                                    {
                                                        <input type="checkbox" value="@item.Name" class="tool-checkbox" id="Tool_@item.ID">

                                                    }
                                                </label>
                                            </div>
                                        </td>
                                        <td>
                                            <label style="margin-top:5px;" for="Tool_@item.ID">@item.Name</label>

                                        </td>
                                    </tr>
                                }

                            </tbody>
                        </table>
                        <input hidden type="text" id="toolNames" value="@Model.Tool" name="Tool" placeholder="Selected tools...">

                    </div>
                </div>



                <div @if (Model.Room == "" || Model.Room == null) { <text> style="display:none;" </text> } id="RoomsCard" class="card mb-2">
                    <div class="card-body">

                        <h4 class="card-title">Rooms</h4>
                        <i style="cursor:pointer;float:right" id="CloseRoomsCard" onclick="ToggleRoomsCard()" class="material-icons">close</i>
                        <button data-href="@Url.Action("ActionResource", "Service", new {Type = "Room"})" type="button" class="data-btn btn btn-sm btn-round btn-success btn-icon-text" data-bs-toggle="modal" data-bs-target="#actionModal">ADD MORE +</button>
                        <table id="RoomsTable" class="table">
                            <thead>
                                <tr>
                                    <th style="width:0px;">
                                        <div class="form-check">
                                            <label>
                                                <input type="checkbox" class="form-check-input" id="selectAllRoom">
                                            </label>
                                        </div>
                                    </th>
                                    <th style=" display: flex; margin-top: 10px; ">
                                        <label for="selectAllRoom">All Rooms</label>
                                        <i style="cursor:pointer;" id="ArrowKeyRoom" class="fa fa-chevron-circle-down"></i>

                                    </th>
                                </tr>
                            </thead>

                            <tbody @if (Model.Room == "" || Model.Room == null) { <text> style="display:none;" </text> }>
                                @foreach (var item in Model.Rooms)
                                {
                                    <tr>
                                        <td>
                                            <div class="form-check">
                                                <label>
                                                    @if (!string.IsNullOrWhiteSpace(Model.Room) && Model.Rooms.Any(x => Model.Room.Split(',').Any(e => e.ToLower().Trim() == x.Name.ToLower().Trim())))
                                                    {
                                                        <input type="checkbox" checked value="@item.Name" class="room-checkbox form-check-input" id="Room_@item.ID">
                                                    }
                                                    else
                                                    {
                                                        <input type="checkbox" value="@item.Name" class="room-checkbox form-check-input" id="Room_@item.ID">

                                                    }
                                                </label>
                                            </div>
                                        </td>
                                        <td>
                                            <label style="margin-top:5px;" for="Room_@item.ID">@item.Name</label>

                                        </td>
                                    </tr>
                                }

                            </tbody>
                        </table>
                        <input hidden type="text" id="roomNames" value="@Model.Room" name="Room" placeholder="Selected Rooms...">

                    </div>
                </div>
                <div @if (Model.Notes == "" || Model.Notes == null) { <text> style="display:none;" </text> } id="DescriptionCard" class="card mb-2">
                    <div class="card-body">
                        <i style="cursor:pointer;float:right" id="CloseNotes" onclick="ToggleDescriptionCard()" class="material-icons">close</i>
                        <h4 class="card-title">Notes</h4>
                        <div class="input-group input-group-dynamic">
                            <input type="text" class="form-control" value="@Model.Notes" name="Notes" id="Notes" />
                        </div>
                    </div>

                </div>

                <div class="card">
                    <div class="card-body">
                        <div class="form-check">
                            <label>
                                @if (Model.CanBookOnline == true)
                                {


                                    <input type="checkbox" checked onchange="SetCanBookOnlineValue()" name="CanBookOnlineCB" class="form-check-input" id="CanBookOnlineCB">
                                }
                                else
                                {
                                    <input type="checkbox" onchange="SetCanBookOnlineValue()" name="CanBookOnlineCB" class="form-check-input" id="CanBookOnlineCB">

                                }
                                This service can be booked online
                            </label>

                            <input type="hidden" name="CanBookOnline" id="CanBookOnline" />


                        </div>


                        <div class="form-check">
                            <label>
                                @if (Model.AddOn == true)
                                {


                                    <input type="checkbox" checked onchange="SetAddOnValue()" name="AddOnCB" class="form-check-input" id="AddOnCB">
                                }
                                else
                                {
                                    <input type="checkbox" onchange="SetAddOnValue()" name="AddOnCB" class="form-check-input" id="AddOnCB">

                                }
                                Add On
                            </label>

                            <input type="hidden" name="AddOn" id="AddOn" />


                        </div>



                        <div class="col-md-12">
                            <button id="ActionBtn" type="button" class="btn btn-primary btn-rounded">SAVE</button>
                            <button onclick="BackToServices()" type="button" class="btn btn-secondary  btn-rounded">CLOSE</button>
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>

    <script>

        $("#Price").on("change", function () {
            PromoConditioning();
        });

        $("#PromoPrice").on("change", function () {
            PromoConditioning(); 
        });

        function PromoConditioning() {
            $("#ActionBtn").attr("disabled", "disabled");
            if ($("#togglePromoPrice").is(':checked')) {
                var PromoPrice = $("#PromoPrice").val();
                var Price = $("#Price").val();

                if (PromoPrice < Price) {
                    alert("Discount price can not be higher than original price. ");
                    return;
                }
                if (PromoPrice != "" && Price == "0") {
                    alert("if Discount price has a value, original price can not be 0 or lesser than 0 ");
                    return;
                }
                if (PromoPrice < 0 && Price < 0) {
                    alert("Price or Discounted Price can not have negative number  ");
                    return;
                }
                if (PromoPrice  == Price) {
                    alert("Discount price and original price should not be the same number.  ");
                    return;
                }
            }
            $("#ActionBtn").removeAttr("disabled");

        }

        function CheckToggle() {
            if ($("#togglePromoPrice").is(':checked')) {
                $('#PriceDDBox').show();
                $("#HavePromo").val("true");
                $("#ddLabel").text("Discount Price");
            } else {
                $('#PriceDDBox').hide();
                $("#HavePromo").val("false");
                $("#ddLabel").text("Price");

            }
        }
        $('#togglePromoPrice').change(function () {
            CheckToggle();
        });
        CheckToggle();
    $(".data-btnEmp").click(function () {
        $.ajax({
            url: $(this).attr("data-href"),
        })
            .done(function (response) {
                $("#actionModalEmp .modal-dialog").html(response);
            });
    });

    $(document).ready(function () {

        // Initial state
        checkAllEmployeeCheckboxes();
        SetCanBookOnlineValue();
        SetAddOnValue();
        SetDoesRequiredProcessing();
        var selectAllEmployeeCheckbox = $('#selectAllEmployee');
        var isEmpCollapsed = true;
        var employeeNamesInput = $('#employeeNames');
        selectAllEmployeeCheckbox.on('change', function () {
            var employeeCheckboxes = $('.employee-checkbox');
            employeeCheckboxes.prop('checked', selectAllEmployeeCheckbox.prop('checked'));
            updateEmployeeNamesInput();
        });
        updateEmployeeNamesInput();

        $(document).on('change', '.employee-checkbox', function () {

            var employeeCheckboxes = $('.employee-checkbox');
            updateEmployeeNamesInput();
            selectAllEmployeeCheckbox.prop('checked', employeeCheckboxes.length === employeeCheckboxes.filter(':checked').length);

        })
        function updateEmployeeNamesInput() {
            var employeeCheckboxes = $('.employee-checkbox');
            var selectedEmployees = employeeCheckboxes.filter(':checked').map(function () {
                return $(this).data('id'); // Get the data-id attribute value
            }).get().join(', ');

            employeeNamesInput.val(selectedEmployees);
        }
        $('#ArrowKeyEmployee').click(function () {
            // Toggle the collapse state
            isEmpCollapsed = !isEmpCollapsed;

            // Toggle the collapse animation for the table body
            $('#EmployeeTable tbody').slideToggle('fast');


        });



        var isToolCollapsed = true;
        var selectToolAllCheckbox = $('#selectAllTool');
        var toolNamesInput = $('#toolNames');


        var isRoomCollapsed = true;
        var selectAllRoomCheckbox = $('#selectAllRoom');
        var roomNamesInput = $('#roomNames');

        selectToolAllCheckbox.on('change', function () {
            var toolCheckboxes = $('.tool-checkbox');
            toolCheckboxes.prop('checked', selectToolAllCheckbox.prop('checked'));
            updatetoolNamesInput();
        });
        $(document).on('change', '.tool-checkbox', function () {
            var toolCheckboxes = $('.tool-checkbox');
            updatetoolNamesInput();
            selectToolAllCheckbox.prop('checked', toolCheckboxes.length === toolCheckboxes.filter(':checked').length);

        })
        function updatetoolNamesInput() {
            var toolCheckboxes = $('.tool-checkbox');
            var selectedtools = toolCheckboxes.filter(':checked').map(function () {
                return $(this).val(); // Get the data-id attribute value
            }).get().join(', ');


            toolNamesInput.val(selectedtools);
        }
        $('#ArrowKeyTool').click(function () {
            // Toggle the collapse state
            isToolCollapsed = !isToolCollapsed;

            // Toggle the collapse animation for the table body
            $('#ToolsTable tbody').slideToggle('fast');


        });


        selectAllRoomCheckbox.on('change', function () {
            var roomCheckboxes = $('.room-checkbox');
            roomCheckboxes.prop('checked', selectAllRoomCheckbox.prop('checked'));
            updateroomNamesInput();
        });
        $(document).on('change', '.room-checkbox', function () {
            var roomCheckboxes = $('.room-checkbox');

            updateroomNamesInput();
            selectAllRoomCheckbox.prop('checked', roomCheckboxes.length === roomCheckboxes.filter(':checked').length);

        })
        function updateroomNamesInput() {
            var roomCheckboxes = $('.room-checkbox');
            var selectedrooms = roomCheckboxes.filter(':checked').map(function () {
                return $(this).val(); // Get the data-id attribute value
            }).get().join(', ');


            roomNamesInput.val(selectedrooms);
        }
        $('#ArrowKeyRoom').click(function () {
            // Toggle the collapse state
            isRoomCollapsed = !isRoomCollapsed;

            // Toggle the collapse animation for the table body
            $('#RoomsTable tbody').slideToggle('fast');


        });




        $('.time-input').on('input', function () {
            // Replace non-numeric characters with an empty string
            $(this).val($(this).val().replace(/[^0-9]/g, ''));

            // Remove 'mins' if present
            if ($(this).val().endsWith('mins')) {
                $(this).val($(this).val().slice(0, -4));
            }
        });
        $('.time-input').on('blur', function () {
            // Append 'mins' if input isn't empty
            if ($(this).val().trim() !== '') {
                $(this).val($(this).val() + ' mins');
            }
        });

        $('.time-input').on('focus', function () {
            // Remove 'mins' if present
            if ($(this).val().endsWith(' mins')) {
                $(this).val($(this).val().slice(0, -5));
            }
        });


    });
    function checkAllEmployeeCheckboxes() {
        var allChecked = true;
        $(".employee-checkbox").each(function () {
            if (!$(this).prop("checked")) {
                allChecked = false;
                return false; // Break the loop if any checkbox is not checked
            }
        });
        // Update the selectAllEmployee checkbox
        $("#selectAllEmployee").prop("checked", allChecked);
    }



    $("#ShowTools").click(function () {
        $("#ToolsCard").toggle();
    });

    $("#ShowDescription").click(function () {
        $("#DescriptionCard").toggle();
    });

    function ToggleToolsCard() {
        $("#ToolsCard").toggle();
    }
    function ToggleDescriptionCard() {
        $("#DescriptionCard").toggle();
    }


    $("#ShowRooms").click(function () {
        $("#RoomsCard").toggle();
    });

    function ToggleRoomsCard() {
        $("#RoomsCard").toggle();
    }

    $(".data-btn").click(function () {
        $.ajax({
            url: $(this).attr("data-href"),
        })
            .done(function (response) {
                $("#actionModal .modal-dialog").html(response);
            });
    });
    $('#DoesRequiredProcessingCB').change(function () {
        var isChecked = $(this).is(':checked');
        if (isChecked) {
            $("#NotRequiredProcessingRow").hide();
            $("#RequiredProcessingRow").show();
            $("#DoesRequiredProcessing").val("True");
        } else {
            $("#NotRequiredProcessingRow").show();
            $("#RequiredProcessingRow").hide();
            $("#DoesRequiredProcessing").val("False");

        }
    });


    function RepopulateCategories() {
        $.ajax({
            url: '@Url.Action("GetCategories","Service")', // Replace with the actual URL
            method: 'GET',
            dataType: 'json',
            success: function (data) {
                // Clear existing options
                $('#Category').empty();

                // Repopulate options
                $.each(data, function (index, categoryName) {

                    $('#Category').append($('<option>', {
                        value: categoryName.Name,
                        text: categoryName.Name
                    }));
                });
                $('#Category').selectpicker('refresh');

            },
            error: function (xhr, status, error) {
                console.error('Error fetching data:', error);
            }
        });
    }


    function RepopulateResources(Type) {

        $.ajax({
            url: '@Url.Action("GetResources", "Service")', // Replace with the actual URL
            method: 'GET',
            dataType: 'json',
            data: {type:Type},
            success: function (data) {
                // Clear existing options
                if (Type == "Room") {
                    $('#RoomsTable tbody').empty();

                    // Repopulate with new data
                    $.each(data, function (index, item) {
                        var newRow = $('<tr>');
                        newRow.append('<td><div class="checkbox form-horizontal-checkbox"><label><input type="checkbox" value="' + item.Name + '" class="room-checkbox" id="Room_' + item.ID + '"></label></div></td>');
                        newRow.append('<td><label style="margin-top:5px;" for="Room_' + item.ID + '">' + item.Name + '</label></td>');

                        $('#RoomsTable tbody').append(newRow);
                    });

                } else {
                    $('#ToolsTable tbody').empty();

                    // Repopulate with new data
                    $.each(data, function (index, item) {
                        var newRow = $('<tr>');
                        newRow.append('<td><div class="checkbox form-horizontal-checkbox"><label><input type="checkbox" value="' + item.Name + '" class="tool-checkbox" id="Tool_' + item.ID + '"></label></div></td>');
                        newRow.append('<td><label style="margin-top:5px;" for="Tool_' + item.ID + '">' + item.Name + '</label></td>');

                        $('#ToolsTable tbody').append(newRow);

                    });



                }

            },
            error: function (xhr, status, error) {
                console.error('Error fetching data:', error);
            }
        });
    }

     function RepopulateEmployees() {
        $.ajax({
            url: '@Url.Action("GetEmployees","Service")', // Replace with the actual URL
            method: 'GET',
            dataType: 'json',
            success: function (data) {
                // Clear existing options
                $('#EmployeeTable tbody').empty();

                // Repopulate with new data
                $.each(data, function (index, item) {
                    var newRow = $('<tr>');
                    newRow.append('<td><div class="checkbox form-horizontal-checkbox"><label><input type="checkbox" value="'+item.Name+'" class="employee-checkbox" id="Emp_' + item.ID + '"></label></div></td>');
                    newRow.append('<td><label style="margin-top:5px;" for="Emp_' + item.ID + '">' + item.Name + '</label></td>');

                    $('#EmployeeTable tbody').append(newRow);
                });

            },
            error: function (xhr, status, error) {
                console.error('Error fetching data:', error);
            }
        });
    }

    function SetCanBookOnlineValue() {
        var isChecked = $('#CanBookOnlineCB').is(':checked');
        if (isChecked) {
            $("#CanBookOnline").val("True");
        } else {
            $("#CanBookOnline").val("False");
        }
    }

    function SetAddOnValue() {
        var isChecked = $('#AddOnCB').is(':checked');
        if (isChecked) {
            $("#AddOn").val("True");
        } else {
            $("#AddOn").val("False");
        }
    }


    function SetDoesRequiredProcessing() {
        var isChecked = $('#DoesRequiredProcessingCB').is(':checked');
        if (isChecked) {
            $("#NotRequiredProcessingRow").hide();
            $("#RequiredProcessingRow").show();
            $("#DoesRequiredProcessing").val("True");
        } else {
            $("#NotRequiredProcessingRow").show();
            $("#RequiredProcessingRow").hide();
            $("#DoesRequiredProcessing").val("False");

        }
    }

    $('#CanBookOnlineCB').change(function () {
        var isChecked = $(this).is(':checked');
        if (isChecked) {
            $("#CanBookOnline").val("True");
        } else {
            $("#CanBookOnline").val("False");
        }
    });


    function ClearBorder() {
        $("#CategoryPicker").css("border", "");
        $("#Name").css("border", "");
        CheckSessions();
    }

    $("#Category").on("change", function () {
        CheckSessions();
    });

    CheckSessions();

    function CheckSessions() {
        var selectedType = $('#Category option:selected').attr('data-type');
        debugger
        if (selectedType == "Package Service") {
            $("#NOSBOX").show();
        } else {
            $("#NOSBOX").hide();


        }
    }

    function BackToServices() {
        var selectedOption = $("#Category").find("option:selected");
        var CategoryID = selectedOption.data("id");
        var url = '@Url.Action("Index", "Service")' + '?ServiceCategory=' + CategoryID;
        window.location.href = url;
    }

    $("#ActionBtn").click(function () {
        $("#ActionBtn").text("Loading...");

        $("#ActionBtn").attr("disabled", "disabled");
        var CategoryName = $("#Category").val();


        var selectedOption = $("#Category").find("option:selected");
        var CategoryID = selectedOption.data("id");

        var Services = $("#Name").val();
        var Duration = $("#Duration").val();
        if (CategoryName != '' && Services != '' && Duration != '') {
            $.ajax({
                url: '@Url.Action("Action", "Service")',
                type: "post",
                data: $("#actionForm").serialize()
            })
                .done(function (response) {
                    if (response.success) {
                        var url = '@Url.Action("Index", "Service")' + '?ServiceCategory=' + CategoryID;
                        window.location.href = url;
                    } else {
                        $(".errorDiv").html(response.Message);
                    }
                });
        } else {
            alert("Kindly fill out the necessary details, or check the red fields");

            // Reset borders first
            $("#CategoryPicker, #Duration, #Name").css("border", "");

            // Add red border only to empty fields
            if (CategoryName == '') {
                $("#CategoryPicker").css("border", "0.5px solid red");
            }
            if (Duration == '') {
                $("#Duration").css("border", "0.5px solid red");
            }
            if (Services == '') {
                $("#Name").css("border", "0.5px solid red");
            }
        }

    });
        </script>
