@model TheBookingPlatform.ViewModels.AdminViewModel
@{
    ViewBag.Title = "Dashboard";
    DateTime firstDay = new DateTime(DateTime.Now.Year, DateTime.Now.Month, 1);
    DateTime lastDayOfCurrentMonth = new DateTime(DateTime.Now.Year, DateTime.Now.Month, DateTime.DaysInMonth(DateTime.Now.Year, DateTime.Now.Month));
}
<script src="https://cdnjs.cloudflare.com/ajax/libs/xlsx/0.18.5/xlsx.full.min.js"></script>

<style>
    .scroll {
        overflow-x: scroll;
        width: contain;
    }
    label {
        width: 100%;
        margin-left: 0px;
        margin-bottom: 0px;
        margin-top: 10px;
    }

    td {
        width: 200px;
    }
</style>
<div class="container">
    @if (Model.SignedInUser.Role != "Super Admin")
    {
        var LastPaymentDate = DateTime.Parse(Model.SignedInUser.LastPaymentDate);
        var RemainderDays = (LastPaymentDate.AddMonths(1).Date - DateTime.Now.Date).Days;
        <div class="alert alert-primary">
            <span class="text-white">You have @RemainderDays days till your package subscription ends</span>
        </div>
    }
    <h3 style="font-size:1.6rem;">Dashboard - Welcome @Model.SignedInUser.Name  - (@Model.SignedInUser.Company)</h3>
    <hr />

    @if (Model.Company != null)
    {
        if (Model.OpeningHours.Count() > 7)
        {
            <div class="alert alert-danger">

                <span class="text-white">Go To Opening Hours > Create Opening Hours for Entire Week (Check is closed if you are closed on that day)</span>
            </div>
        }
        if (Model.Company.CountryName == null)
        {
            <div class="alert alert-info">
                <span class="text-white"> Go To Settings > Select Country Name</span>
            </div>
        }
        if (Model.Company.Currency == null)
        {
            <div class="alert alert-info">
                <span class="text-white">Go To Settings > Select Currency </span>
            </div>
        }
        if (Model.Company.CancellationTime == null)
        {
            <div class="alert alert-info">
                <span class="text-white">Go To Settings > Select Cancellation Time </span>
            </div>
        }
        if (Model.Company.Deposit == 0)
        {
            <div class="alert alert-danger">
                <span class="text-white">Go To Settings > Enter your Deposit %</span>
            </div>
        }
        if (Model.Company.APIKEY == null)
        {
            <div class="alert alert-danger">
                <span class="text-white"> Go To Settings > Enter your Stripe API Key  </span>
            </div>
        }
        if (Model.Company.PUBLISHEDKEY == null)
        {
            <div class="alert alert-danger">
                <span class="text-white">Go To Settings > Enter your Stripe Published Key</span>
            </div>
        }

    }
</div>

<div class="row " style=" padding-left: 0px; padding-right: 0px; ">
    
    <div class="card ">
        <div class="card-body">
            <form>
                <div class="row">
                    <div class="form-group col-md-3">
                        <div class="input-group input-group-dynamic">
                            <label>Start Date</label>
                            <input type="date" class="form-control" value="@Model.StartDate.ToString("yyyy-MM-dd")" id="StartDate" name="StartDate" />
                        </div>
                    </div>
                    <div class="form-group col-md-3">
                        <div class="input-group input-group-dynamic">
                            <label>End Date</label>
                            <input type="date" class="form-control" value="@Model.EndDate.ToString("yyyy-MM-dd")" id="EndDate" name="EndDate" />
                        </div>
                    </div>
                    <div class="form-group col-md-3">
                        <label>Last Appointment Filter</label>
                        <select name="FilterDuration" id="FilterDuration" class="form-select">
                            <option @(Model.FilterDuration == "30 days" ? "selected" : "") value="30 days">30 days</option>
                            <option @(Model.FilterDuration == "60 days" ? "selected" : "") value="60 days">60 days</option>
                            <option @(Model.FilterDuration == "3 months" ? "selected" : "") value="3 months">3 months ago</option>
                            <option @(Model.FilterDuration == "6 months" ? "selected" : "") value="6 months">6 months ago</option>
                            <option @(Model.FilterDuration == "1 year" ? "selected" : "") value="1 year">1 year ago</option>
                            <option @(Model.FilterDuration == "2 years" ? "selected" : "") value="2 years">2 years ago</option>
                        </select>
                    </div>
                    <div class="form-group col-md-3" style="margin-top:40px;">
                        <button type="submit" class="btn btn-primary btn-sm">
                            FILTER
                        </button>
                    </div>
                </div>
            </form>
            <h4 class="card-title">
                Clients Acquired And Return(s) Statistics
            </h4>

            <div class="row">

                <div class="col-sm-4">
                    <div class="card">
                        <div class="card-body p-3 position-relative">
                            <div class="row">
                                <div class="col-7 text-start">
                                    <p class="text-sm mb-1 text-capitalize font-weight-bold">New Clients</p>
                                    <h5 class="font-weight-bolder mb-0">
                                        @Model.NewClients
                                    </h5>
                                    <span style="white-space:nowrap;" class="text-sm text-end text-success font-weight-bolder mt-auto mb-0">+12% <span class="font-weight-normal text-secondary">since last month</span></span>

                                </div>
                                <div class="col-5">
                                    <div class="dropdown text-end">
                                        <span class="text-xs text-secondary">@firstDay.ToString("dd MMM") - @lastDayOfCurrentMonth.ToString("dd MMM")</span>

                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-sm-4">
                    <div class="card">
                        <div class="card-body p-3 position-relative">
                            <div class="row">
                                <div class="col-7 text-start">
                                    <p class="text-sm mb-1 text-capitalize font-weight-bold">Returned Visit</p>
                                    <h5 class="font-weight-bolder mb-0">
                                        @Model.ReturnedClients
                                    </h5>
                                    <span style="white-space:nowrap;" class="text-sm text-end text-success font-weight-bolder mt-auto mb-0">+12% <span class="font-weight-normal text-secondary">since last month</span></span>

                                </div><div class="col-5">
                                    <div class="dropdown text-end">
                                        <span class="text-xs text-secondary">@firstDay.ToString("dd MMM") - @lastDayOfCurrentMonth.ToString("dd MMM")</span>

                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>

                <div class="col-sm-4">
                    <div class="card">
                        <div class="card-body p-3 position-relative">
                            <div class="row">
                                <div class="col-7 text-start">
                                    <p class="text-sm mb-1 text-capitalize font-weight-bold">Lost Clients</p>
                                    <h5 class="font-weight-bolder mb-0">
                                        @Model.LostClients
                                    </h5>


                                    <button id="downloadExcel" class="btn btn-sm btn-primary">Download</button>
                                    <span style="white-space:nowrap;" class="text-sm text-end text-success font-weight-bolder mt-auto mb-0">+12% <span class="font-weight-normal text-secondary">since last month</span></span>

                                </div><div class="col-5">
                                    <div class="dropdown text-end">
                                        <span class="text-xs text-secondary">@firstDay.ToString("dd MMM") - @lastDayOfCurrentMonth.ToString("dd MMM")</span>

                                    </div>
                                </div>

                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
    </div>

</div>

<div class="modal fade" id="actionModal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
    </div>
</div>

<script>


    $(".data-btn").click(function () {
        $.ajax({
            url: $(this).attr("data-href"),
        })
            .done(function (response) {
                $("#actionModal .modal-dialog").html(response);
            });
    });


    $(document).ready(function () {
        $('#downloadExcel').on('click', function () {
            var filterDuration = prompt("Enter filter duration (e.g., 30 days, 60 days, 3 months):");

            // Check if the user provided a duration
            if (filterDuration) {
                $.ajax({
                    url: '/Admin/GetLostClietCustomers', // Change to your controller and method
                    type: 'GET',
                    data: { FilterDuration: filterDuration },
                    success: function (data) {
                        if (data.success) {
                            // Convert JSON data to Excel format
                            const worksheet = XLSX.utils.json_to_sheet(data.LostCustomers);
                            const workbook = XLSX.utils.book_new();
                            XLSX.utils.book_append_sheet(workbook, worksheet, "Lost Clients");

                            // Export the Excel file
                            XLSX.writeFile(workbook, "LostClients.xlsx");
                        } else {
                            alert("No lost clients found or an error occurred.");
                        }
                    },
                    error: function (xhr, status, error) {
                        console.error('Error fetching data:', error);
                        alert("An error occurred while downloading the data.");
                    }
                });
            } else {
                alert("Filter duration is required.");
            }
        });
    });



</script>

