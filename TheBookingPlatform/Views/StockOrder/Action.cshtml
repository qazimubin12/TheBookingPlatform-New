@model TheBookingPlatform.ViewModels.StockOrderActionViewModel
@{
    ViewBag.Title = "Action";
}


<style>


    .form-group .checkbox label, .form-group .radio label, .form-group label, .form-group .label-on-left, .form-group .label-on-right {
        font-size: 14px;
        line-height: 1.428571429;
        color: black;
        font-weight: 400;
    }

    .checkbox label {
        cursor: pointer;
        padding-left: 0;
        color: black;
    }

    .SupplierCard {
        display: flex;
        cursor: pointer;
        flex-direction: column;
        align-items: center;
        justify-content: center;
        background-color: white;
        border: 1px solid #e0e0e0;
        border-radius: 15px;
        box-shadow: 0px 2px 6px rgba(0, 0, 0, 0.1);
        margin: 20px;
        transition: transform 0.3s, box-shadow 0.3s;
    }

        .SupplierCard:hover {
            transform: translateY(-5px);
            box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.2);
        }

        .SupplierCard img {
            max-width: 80%;
            max-height: 60%;
            object-fit: contain;
            margin-top: 20px;
        }

        .SupplierCard .supplier-info {
            padding: 15px;
            text-align: center;
        }

        .SupplierCard h3 {
            margin: 10px 0;
            font-size: 1.5rem;
        }

        .SupplierCard p {
            margin: 0;
            color: #555;
            font-size: 1rem;
        }

        .SupplierCard .contact-button {
            margin-top: 15px;
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            background-color: #007bff;
            color: white;
            font-size: 1rem;
            cursor: pointer;
            transition: background-color 0.3s;
        }

            .SupplierCard .contact-button:hover {
                background-color: #0056b3;
            }


    .table > .table > tbody > tr > th, .table > tfoot > tr > th, .table > thead > tr > td, .table > tbody > tr > td, .table > tfoot > tr > td {
        padding: 10px 8px;
        vertical-align: middle;
    }

    .quantity-container {
        display: flex;
        align-items: center;
    }

    .quantity-input {
        width: 40px;
        text-align: center;
    }

    .quantity-btn {
        cursor: pointer;
        padding: 5px 10px;
    }
</style>
<form id="actionForm">
    <div class="col-md-12">
        <div class="card">
            <div class="card-header">
                @if (Model.ID != 0)
                {
                    <h4 class="card-title">
                        Edit Stock Order
                    </h4>
                }
                else
                {
                    <h4 class="card-title">
                        Create Stock Order
                    </h4>
                }
            </div>


            <div class="card-content">
                <div id="SupplierCardsContent">
                    @if (Model.ID != 0)
                    {
                        <h5>Change Supplier:</h5>

                    }
                    else
                    {
                        <h5>Select Supplier:</h5>

                    }
                    <div class="row">
                        @foreach (var item in Model.Suppliers)
                        {
                            if (Model.SupplierID == item.Supplier.ID)
                            {
                                <div style=" border: 5px solid orange;" data-id="@item.Supplier.ID" data-name="@item.Supplier.Name" class="col-md-3 SupplierCard">
                                    <h4><b>@item.Supplier.Name</b></h4>

                                    <br />
                                    <h4 class="text-center">Total Inventory:<br /> @item.TotalInventory</h4>
                                    <button type="button" data-id="@item.Supplier.ID" data-name="@item.Supplier.Name" class="btn btn-sm btn-round btn-success btnSelect">Select</button>
                                </div>
                            }
                            else
                            {
                                <div data-id="@item.Supplier.ID" data-name="@item.Supplier.Name" class="col-md-3 SupplierCard">
                                    <h4><b>@item.Supplier.Name</b></h4>
                                    <br />
                                    <h4 class="text-center">Total Inventory:<br /> @item.TotalInventory</h4>
                                    <button type="button" data-id="@item.Supplier.ID" data-name="@item.Supplier.Name" class="btn btn-sm btn-round btn-success btnSelect">Select</button>
                                </div>
                            }
                        }
                    </div>
                </div>


                <div id="MainCardContent" style="display:none;">
                    <button type="button" id="GoBack" class="btn btn-sm btn-danger">BACK </button>
                    <input type="hidden" id="ID" name="ID" value="@Model.ID" />
                    <input type="hidden" id="SupplierID" name="SupplierID" />



                    <h5>Select Products for the Supplier: <span style="font-weight:bold;" id="SupplierName"></span></h5>
                    <div class="row">
                        <div style="max-height:400px;" class="col-md-6">
                            <input type="text" id="SearchProducts" class="form-control" placeholder="Search" />
                            @if (Model.ProductInCart != null)
                            {
                                <input type="hidden" id="ProductsInCard" value="@(string.Join(",", Model.ProductInCart.Select(item => item.ProductID)))" />
                            }
                            <table id="ProductsTableStocked" class="table table-hover">
                                <thead>
                                    <tr>
                                        <th colspan="2">Name</th>
                                        <th>Stock</th>
                                        <th>Min</th>
                                        <th>Max</th>
                                        <th></th>
                                    </tr>
                                </thead>
                                <tbody>
                                </tbody>
                            </table>
                        </div>
                        <h6>Your Order</h6>
                        <div id="MainCart" style="max-height:400px;" class="col-md-6">

                            @if (Model.ProductInCart == null || Model.ProductInCart.Count() == 0)
                            {

                                <img style="width:60%;" src="~/Content/TBPContent/cart-image.jpg" />
                                <br />
                                <h4 class="text-center">Your cart is empty</h4>
                            }
                            else
                            {
                                <table id="productsTable" class="table table-striped table-hover">
                                    <thead>
                                        <tr>
                                            <th>Name</th>
                                            <th>Qty</th>
                                            <th>Price</th>
                                            <th>Total</th>
                                            <th></th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var product in Model.ProductInCart)
                                        {
                                            <tr>
                                                <td class="productId" style="display:none">  @product.ProductID  </td>
                                                <td>@product.ProductName</td>
                                                <td>
                                                    <div class="quantity-container">
                                                        <button style="padding: 5px 10px;" type="button" class="btn quantity-btn minus-button btn-sm btn-danger">-</button>
                                                        <input type="text" class="quantity-input form-control" value="@product.OrderedQty" />
                                                        <button style="padding: 5px 10px;" type="button" class="btn quantity-btn plus-button btn-sm btn-success">+</button>
                                                    </div>
                                                </td>
                                                <td><input style="display:flex;text-align:center;" type="text" class="form-control price-input" value=@product.Price></td>
                                                <td class="product-total">@product.Total</td>
                                                <td><button id="@product.ProductID" type="button" class="removeRowBtn btn btn-sm btn-round btn-danger"><i class="fas fa-trash-alt"></i></button></td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            }
                        </div>
                      
                    </div>
                </div>

            </div>


            <div id="ActionButtons" style="display:none; float:right;" class="col-md-12">
                @if (Model.ID != 0)
                {
                    <button id="ActionBtnSaveDraft" type="button" class="btn btn-sm btn-round btn-light btn-rounded">UPDATE DRAFT</button>
                }
                else
                {
                    <button id="ActionBtnSaveDraft" type="button" class="btn btn-sm btn-round btn-light btn-rounded">SAVE DRAFT</button>

                }
                <button  id="ActionBtnPlaceOrder" type="button" class="btn btn-sm btn-round btn-primary btn-rounded">PLACE ORDER</button>

                <a href="@Url.Action("Index", "Product", new {Selected="Stock Order"})" class="btn btn-sm btn-round btn-danger  btn-rounded">CLOSE</a>
                <div style="float:right;" class="grandTotal">
                    @if (Model.ID != 0)
                    {
                        <h3 style="font-weight:bold;">Grand Total: <span id="GrandTotal">@Model.GrandTotal</span></h3>
                        <input type="hidden" name="GrandTotal" value="@Model.GrandTotal" id="MainGrandTotal" />

                    }
                    else
                    {
                        <h3 style="font-weight:bold;">Grand Total: <span id="GrandTotal">0.00</span></h3>
                        <input type="hidden" name="GrandTotal" id="MainGrandTotal" />
                    }

                </div>
            </div>
        </div>
    </div>
</form>
<div class="modal fade center" id="actionModal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
    </div>
</div>



<script>

    $('.removeRowBtn').click(function () {
        $(this).closest('tr').remove();
        var productId = $(this).attr('id');

        var button = $("#ProductsTableStocked").find("button#" + productId);
        var icon = button.find("i");
        button.removeClass("btn-light").addClass("btn-primary");
        icon.text("add");
        GetGrandTotal();


    });
    $("#ActionBtnSaveDraft").click(function () {

        showLoadingSpinner();
        var rowDataArray = [];

        $("#productsTable tbody tr").each(function () {
            var productId = $(this).find(".productId").text();
            var productName = $(this).find("td:eq(1)").text();
            var quantity = $(this).find(".quantity-input").val();
            var price = $(this).find(".price-input").val();
            var total = $(this).find(".product-total").text();

            rowDataArray.push({
                ProductID: productId,
                ProductName: productName,
                OrderedQty: quantity,
                Price: price,
                Total: total
            });
        });

        var ProductDetails = JSON.stringify(rowDataArray);



        $.ajax({
            url: '@Url.Action("Action", "StockOrder")',
            type: "post",
            data: $("#actionForm").serialize() + "&ProductDetails=" + encodeURIComponent(ProductDetails)
        })
            .done(function (response) {
                if (response.success) {
                    window.location.href = '@Url.Action("Index", "Product", new {Selected = "Stock Order" })';
                    hideLoadingSpinner();
                }
                else {
                    $(".errorDiv").html(response.Message);
                    hideLoadingSpinner();
                }
            });
    });
    $("#ActionBtnPlaceOrder").click(function () {
        showLoadingSpinner();
        var rowDataArray = [];

        $("#productsTable tbody tr").each(function () {
            var productId = $(this).find(".productId").text();
            var productName = $(this).find("td:eq(1)").text();
            var quantity = $(this).find(".quantity-input").val();
            var price = $(this).find(".price-input").val();
            var total = $(this).find(".product-total").text();

            rowDataArray.push({
                ProductID: productId,
                ProductName: productName,
                OrderedQty: quantity,
                Price: price,
                Total: total
            });
        });

        var ProductDetails = JSON.stringify(rowDataArray);



        $.ajax({
            url: '@Url.Action("ActionStartOrder", "StockOrder")',
            type: "post",
            data: $("#actionForm").serialize() + "&ProductDetails=" + encodeURIComponent(ProductDetails)
        })
            .done(function (response) {
                if (response.success) {
                    var stockOrderID = response.StockOrderID;
                    var url = '@Url.Action("ShowStockOrderDetail", "StockOrder")' + '?StockOrderID=' + stockOrderID;
                    window.location.href = url;
                    hideLoadingSpinner();
                }
                else {
                    $(".errorDiv").html(response.Message);
                    hideLoadingSpinner();
                }
            });
    });





    function ShowButtonsOrNot() {
        var numRows = $("#productsTable tbody tr").length;

        if (numRows > 0) {
            $("#ActionButtons").show();
            $("#EmptyProductsImage").hide();

        } else {
            $("#ActionButtons").hide();
            $("#EmptyProductsImage").show();

        }

    }

    function GetGrandTotal() {
        var total = 0;

        $('.product-total').each(function () {
            var cellText = $(this).text();
            var floatValue = parseFloat(cellText);

            if (!isNaN(floatValue)) {
                total += floatValue;
            }
        });

        $('#GrandTotal').text(total.toFixed(2));
        $("#MainGrandTotal").val(total.toFixed(2));
    }

    $("#GoBack").click(function () {
        $("#SupplierCardsContent").fadeIn("fast");
        $("#MainCardContent").fadeOut("fast");


    });

    function RemoveProductFromTable(productId) {

        $("#productsTable").find(".productId:contains(" + productId + ")").closest("tr").remove();

        var button = $("#ProductsTableStocked").find("button#" + productId);
        var icon = button.find("i");
        button.removeClass("btn-light").addClass("btn-primary");
        icon.text("add");
        GetGrandTotal();
        ShowButtonsOrNot();



    }
    $(document).ready(function () {

        var ID = $("#ID").val()
        if (ID != 0) {
            ShowButtonsOrNot();
        }

        function UpdateProductTotal(row) {

            var quantityInput = row.find(".quantity-input");
            var priceInput = row.find(".price-input");
            var totalCell = row.find(".product-total");
            var quantity = parseInt(quantityInput.val());
            var price = parseFloat(priceInput.val());
            var productTotal = quantity * price;


            totalCell.text(productTotal.toFixed(2));// Update the total value in the cell
            GetGrandTotal();
        }



        $("#MainCart").on("click", ".plus-button", function () {
            var quantityInput = $(this).closest(".quantity-container").find(".quantity-input");
            var currentValue = parseInt(quantityInput.val());
            quantityInput.val(currentValue + 1);
            var row = $(this).closest("tr");
            UpdateProductTotal(row); // Call the function to update total
        });

        $("#MainCart").on("change", ".quantity-input, .price-input", function () {
            var row = $(this).closest("tr");
            UpdateProductTotal(row); // Call the function to update total
        });

        $("#MainCart").on("click", ".minus-button", function () {
            var quantityInput = $(this).closest(".quantity-container").find(".quantity-input");
            var currentValue = parseInt(quantityInput.val());
            if (currentValue > 1) {
                quantityInput.val(currentValue - 1);
                var row = $(this).closest("tr");
                UpdateProductTotal(row); // Call the function to update total
            }
        });




        $("#ProductsTableStocked").on("click", ".addBtn", function (event) {
            event.stopPropagation(); // Stop the event from propagating to parent elements
            var button = $(this);
            var icon = button.find("i");


            if (button.hasClass("btn-primary")) {
                button.removeClass("btn-primary").addClass("btn-light");
            } else {
                button.removeClass("btn-light").addClass("btn-primary");
            }
            if (icon.text() === "add") {
                icon.text("done");
            } else {
                icon.text("add");
            }


            var ProductId = $(this).attr("id");

            AddProductsToTable(ProductId);

        });
        $("#ProductsTableStocked").on("click", ".addRow", function (event) {
            event.stopPropagation();
            var row = $(this);
            var button = row.find(".addBtn");
            var icon = button.find("i");
            if (button.hasClass("btn-primary")) {
                button.removeClass("btn-primary").addClass("btn-light");
            } else {
                button.removeClass("btn-light").addClass("btn-primary");
            }
            if (icon.text() === "add") {
                icon.text("done");
            } else {
                icon.text("add");
            }


            var ProductId = $(this).attr("id");
            AddProductsToTable(ProductId);
        });



        var tableCreated = false; // Flag to track if the table is created
        function AppendProductToTable(product) {
            // Assuming you have a table with id 'productTable'
            var mainCartDiv = $('#MainCart');
            var existingRow = $("#productsTable").find(".productId:contains(" + product.ID + ")").closest("tr");

            if (existingRow.length > 0) {
                // Remove the existing row if found
                existingRow.remove();
                GetGrandTotal();
            } else {
                var ID = $("#ID").val();
                if (ID != 0) {
                    tableCreated = true;
                }
                var productName = product.Name;
                var quantity = 1;
                var productPrice = product.CostPrice;
                var productTotal = quantity * productPrice;

                var quantityHtml =
                    '<div class="quantity-container">' +
                    '<button  style="padding: 5px 10px;" type="button" class="btn quantity-btn minus-button btn-sm btn-danger">-</button>' +
                    '<input type="text" class="quantity-input form-control" value="' + quantity + '" />' +
                    '<button style="padding: 5px 10px;" type="button" class="btn quantity-btn plus-button btn-sm btn-success">+</button>' +
                    '</div>';




                var newRow = '<tr>' +
                    '<td class="productId" style="display:none">' + product.ID + '</td>' +
                    '<td>' + productName + '</td>' +
                    '<td>' + quantityHtml + '</td>' +
                    '<td><input style="display:flex;text-align:center;" type="text" class="form-control price-input" value =' + product.CostPrice + '></td>' +
                    '<td class="product-total">' + productTotal + '</td>' +
                    '<td><button onclick="RemoveProductFromTable(' + product.ID + ')" type="button" class="removeRowBtn btn btn-sm btn-round btn-danger"><i class="fas fa-trash-alt"></i></button></td>' +

                    '</tr>';



                if (!tableCreated) {
                    // Create the table structure for the first product
                    var newTable = '<table style="    padding: 5px 8px;" id="productsTable" class="table table-hover table-striped">' +
                        '<thead>' +
                        '<tr>' +
                        '<th>Name</th>' +
                        '<th>Qty</th>' +
                        '<th>Price</th>' +
                        '<th>Total</th>' +
                        '<th></th>' +
                        '</tr>' +
                        '</thead>' +
                        '<tbody>' +
                        newRow +
                        '</tbody>' +
                        '</table>';

                    mainCartDiv.empty();
                    mainCartDiv.append(newTable);
                    tableCreated = true;
                    GetGrandTotal();

                }
                else {
                    // Append new row to the existing table
                    var mainCartTable = mainCartDiv.find('table tbody');
                    mainCartTable.append(newRow);
                    GetGrandTotal();

                }
            }
        }

        function AddProductsToTable(ProductID) {
            showLoadingSpinner();
            $.ajax({
                url: '@Url.Action("GetProduct","StockOrder")',
                type: 'GET',
                data: { ID: ProductID },
                success: function (data) {
                    // Once you have the product data, you can append it to the table
                    AppendProductToTable(data);
                    ShowButtonsOrNot();
                    hideLoadingSpinner();
                },
                error: function () {
                    alert('Error fetching product data.');
                    hideLoadingSpinner();
                }
            });
        }

    });


    $(".btnSelect, .SupplierCard").click(function () {
        var IdOfSupplier = $(this).data("id");
        $("#SupplierID").val(IdOfSupplier);

        var NameOfSupplier = $(this).data("name");
        $("#SupplierName").text(NameOfSupplier);
        $("#SupplierCardsContent").fadeOut("fast");
        $("#MainCardContent").fadeIn("fast");
        var ID = $("#ID").val();
        showLoadingSpinner();

        var tableOfStockedProducts = $("#ProductsTableStocked");
          $.ajax({
                url: '@Url.Action("GetProductsAccordingToSupplier", "StockOrder")',
                type: 'GET',
              data: { SupplierID: IdOfSupplier },
              success: function (data) {
                    // Once you have the product data, you can append it to the table
                    tableOfStockedProducts.find("tbody").empty();
                    if (ID != 0) {
                        var productInCartArray = $("#ProductsInCard").val();
                        var productIDs = productInCartArray.split(',');

                        $.each(data, function (index, item) {
                            var buttonHtml = '';
                            console.log(productInCartArray);
                            if (productIDs.includes(item.ID.toString())) {

                                buttonHtml = '<button id="' + item.ID.toString() + '" type="button" class="addBtn btn btn-sm btn-light btn-round"><i class="material-icons">done</i></button>';
                            } else {
                                buttonHtml = '<button id="' + item.ID.toString() + '" type="button" class="addBtn btn btn-sm btn-primary btn-round"><i class="material-icons">add</i></button>';
                            }

                            var newRow = $("<tr id=" + item.ID + " style='cursor:pointer;' class='addRow'></tr>");

                            //buttonHtml = '<button id="' + item.ID + '" type="button" class="addBtn btn btn-sm btn-primary btn-round"><i class="material-icons">add</i></button>';
                            newRow.append('<td colspan="2">' + item.Name + '</td>');
                            newRow.append('<td>' + item.CurrentStock + '</td>');
                            newRow.append('<td>' + item.MinStock + '</td>');
                            newRow.append('<td>' + item.MaxStock + '</td>');
                            newRow.append('<td>' + buttonHtml + '</td>');

                            tableOfStockedProducts.append(newRow);
                        });
                    } else {
                        $.each(data, function (index, item) {
                            var buttonHtml = '';
                            var newRow = $("<tr id="+item.ID+" style='cursor:pointer;' class='addRow'></tr>");

                            buttonHtml = '<button id="' + item.ID + '" type="button" class="addBtn btn btn-sm btn-primary btn-round"><i class="material-icons">add</i></button>';
                            newRow.append('<td colspan="2">' + item.Name + '</td>');
                            newRow.append('<td>' + item.CurrentStock + '</td>');
                            newRow.append('<td>' + item.MinStock + '</td>');
                            newRow.append('<td>' + item.MaxStock + '</td>');
                            newRow.append('<td>' + buttonHtml + '</td>');

                            tableOfStockedProducts.append(newRow);
                        });

                    }
                  hideLoadingSpinner();


                },
                error: function () {
                    alert('Error fetching product data.');
                }
            });

        


    });



</script>